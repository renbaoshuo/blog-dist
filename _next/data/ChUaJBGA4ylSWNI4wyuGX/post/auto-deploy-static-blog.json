{"pageProps":{"title":"浅谈静态博客的自动部署方案 - 宝硕博客","post":{"title":"浅谈静态博客的自动部署方案","excerpt":"笔者最近阅读了 ChrAlpha 大佬的 初探无后端静态博客自动化部署方案 这篇博文，发现其中的一些内容已经过时，所以我决定写下这篇博文来简单说一说现在（2021 年）静态博客的自动部署方案。","content":[["$","p",{},["笔者最近阅读了 ChrAlpha 大佬的 ",["$","a",{"href":"https://blog.ichr.me/post/automated-deployment-of-serverless-static-blog/","rel":"external nofollow noreferrer"},["初探无后端静态博客自动化部署方案"]]," 这篇博文，发现其中的一些内容已经过时，所以我决定写下这篇博文来简单说一说现在（2021 年）静态博客的自动部署方案。"]],["$","span",{"id":"more"},[]],["$","p",{},["笔者 9 月中旬将自己的 OI 博客（",["$","a",{"href":"https://oi.baoshuo.ren","rel":"external nofollow noreferrer"},["oi.baoshuo.ren"]],"）迁到了 GitHub 上并使用 GitHub Actions 进行持续部署，在感觉良好以后又在 10 月初将自己的主博客（",["$","a",{"href":"https://blog.baoshuo.ren"},["blog.baoshuo.ren"]],"）也迁移到了上面，这期间我尝试了多家 CI/CD 服务，并总结了一些配置要领。"]],["$","p",{},["本文中使用的 NodeJS 包管理器为 yarn 。"]],["$","h2",{"id":"github-actions"},["GitHub Actions"]],["$","p",{},["GitHub Actions 是笔者最常用的 CI/CD 服务，没有之一。关于 GitHub Actions 的介绍可以查看 ",["$","a",{"href":"https://docs.github.com/en/actions","rel":"external nofollow noreferrer"},["GitHub Actions 官网文档"]]," 和阮老师的 ",["$","a",{"href":"https://www.ruanyifeng.com/blog/2019/09/getting-started-with-github-actions.html","rel":"external nofollow noreferrer"},["GitHub Actions 入门教程"]]," 。"]],["$","p",{},["配置 GitHub Actions 是非常方便的，无需绑定任何第三方平台，仅需在仓库中新建一个 ",["$","code",{},[".github/workflows/*.yml"]]," 即可。"]],["$","blockquote",{},[["$","p",{},["Hexo 核心团队成员之一 ",["$","a",{"href":"https://skk.moe","rel":"external nofollow noreferrer"},["Sukka"]]," 大佬在他的 ",["$","a",{"href":"https://blog.skk.moe/post/deploy-blog-to-cf-workers-site/","rel":"external nofollow noreferrer"},["将 Hexo 部署到 Cloudflare Workers Site 上的趟坑记录"]]," 一文中强烈建议不要使用任何 Hexo 的 GitHub Action ，把 Hexo 当成一个普通的依赖 NodeJS 的构建程序，遵照这个思路编写配置文件即可。"]]]],["$","pre",{},[["$","code",{"class":"hljs yaml"},[["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Build"]],"\n\n",["$","span",{"class":"hljs-attr"},["on:"]],"\n  ",["$","span",{"class":"hljs-attr"},["push:"]],"\n    ",["$","span",{"class":"hljs-attr"},["branches:"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-string"},["master"]],"\n  ",["$","span",{"class":"hljs-attr"},["workflow_dispatch:"]],"\n\n",["$","span",{"class":"hljs-attr"},["jobs:"]],"\n  ",["$","span",{"class":"hljs-attr"},["build:"]],"\n    ",["$","span",{"class":"hljs-attr"},["runs-on:"]]," ",["$","span",{"class":"hljs-string"},["ubuntu-latest"]],"\n    ",["$","span",{"class":"hljs-attr"},["steps:"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["uses:"]]," ",["$","span",{"class":"hljs-string"},["actions/checkout@v2"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Use"]]," ",["$","span",{"class":"hljs-string"},["Node.js"]]," ",["$","span",{"class":"hljs-number"},["14"]],"\n        ",["$","span",{"class":"hljs-attr"},["uses:"]]," ",["$","span",{"class":"hljs-string"},["actions/setup-node@v2"]],"\n        ",["$","span",{"class":"hljs-attr"},["with:"]],"\n          ",["$","span",{"class":"hljs-attr"},["node-version:"]]," ",["$","span",{"class":"hljs-number"},["14"]],"\n          ",["$","span",{"class":"hljs-attr"},["cache:"]]," ",["$","span",{"class":"hljs-string"},["yarn"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Install"]]," ",["$","span",{"class":"hljs-string"},["Dependencies"]],"\n        ",["$","span",{"class":"hljs-attr"},["run:"]]," ",["$","span",{"class":"hljs-string"},["yarn"]]," ",["$","span",{"class":"hljs-string"},["install"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Build"]]," ",["$","span",{"class":"hljs-string"},["Site"]],"\n        ",["$","span",{"class":"hljs-attr"},["run:"]]," ",["$","span",{"class":"hljs-string"},["yarn"]]," ",["$","span",{"class":"hljs-string"},["build"]],"\n      ",["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Deploy"]]," ",["$","span",{"class":"hljs-string"},["to"]]," ",["$","span",{"class":"hljs-string"},["GitHub"]]," ",["$","span",{"class":"hljs-string"},["Pages"]],"\n        ",["$","span",{"class":"hljs-attr"},["uses:"]]," ",["$","span",{"class":"hljs-string"},["peaceiris/actions-gh-pages@v3"]],"\n        ",["$","span",{"class":"hljs-attr"},["with:"]],"\n          ",["$","span",{"class":"hljs-attr"},["github_token:"]]," ",["$","span",{"class":"hljs-string"},["${{"]]," ",["$","span",{"class":"hljs-string"},["secrets.GITHUB_TOKEN"]]," ",["$","span",{"class":"hljs-string"},["}}"]],"\n          ",["$","span",{"class":"hljs-attr"},["publish_dir:"]]," ",["$","span",{"class":"hljs-string"},["public"]],"\n          ",["$","span",{"class":"hljs-attr"},["cname:"]]," ",["$","span",{"class":"hljs-string"},["blog.baoshuo.ren"]]]]]],["$","p",{},["该工作流的大体步骤如下："]],["$","ol",{},[["$","li",{},["检出仓库中的源文件到工作目录"]],["$","li",{},["安装 NodeJS 和 yarn 包管理器，如果使用的是 npm 包管理器请自行修改。"]],["$","li",{},["安装依赖。"]],["$","li",{},["构建站点。"]],["$","li",{},["部署到 GitHub Pages 。"]]]],["$","p",{},["在构建完成后会发现文章的更新时间出现了错误，可以在生成前添加下面这步来将文件的修改日期更正为该文件最后一次 commit 时的时间。"]],["$","pre",{},[["$","code",{"class":"hljs yml"},[["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["name:"]]," ",["$","span",{"class":"hljs-string"},["Fix"]]," ",["$","span",{"class":"hljs-string"},["File"]]," ",["$","span",{"class":"hljs-string"},["Modify"]]," ",["$","span",{"class":"hljs-string"},["Date"]],"\n  ",["$","span",{"class":"hljs-attr"},["run:"]]," ",["$","span",{"class":"hljs-string"},["|"]],"\n    ",["$","span",{"class":"hljs-string"},["git"]]," ",["$","span",{"class":"hljs-string"},["ls-files"]]," ",["$","span",{"class":"hljs-string"},["|"]]," ",["$","span",{"class":"hljs-string"},["while"]]," ",["$","span",{"class":"hljs-string"},["read"]]," ",["$","span",{"class":"hljs-string"},["filepath;"]]," ",["$","span",{"class":"hljs-string"},["do"]]," ",["$","span",{"class":"hljs-string"},["touch"]]," ",["$","span",{"class":"hljs-string"},["-d"]]," ",["$","span",{"class":"hljs-string"},["\"$(git log -1 --format='@%ct' $filepath)\""]]," ",["$","span",{"class":"hljs-string"},["\"$filepath\""]]," ",["$","span",{"class":"hljs-string"},["&&"]]," ",["$","span",{"class":"hljs-string"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"Fixed: $filepath\""]],["$","span",{"class":"hljs-string"},[";"]]," ",["$","span",{"class":"hljs-string"},["done"]]]]]],["$","p",{},["当然，为了让 git 有日志可寻，还得在检出的时候顺带把所有提交历史一并拉下来，指定 ",["$","code",{},["fetch-depth"]]," 就能做到："]],["$","pre",{},[["$","code",{"class":"hljs yaml"},[["$","span",{"class":"hljs-bullet"},["-"]]," ",["$","span",{"class":"hljs-attr"},["uses:"]]," ",["$","span",{"class":"hljs-string"},["actions/checkout@v2"]],"\n  ",["$","span",{"class":"hljs-attr"},["with:"]],"\n    ",["$","span",{"class":"hljs-attr"},["fetch-depth:"]]," ",["$","span",{"class":"hljs-number"},["0"]]]]]],["$","p",{},["然后开启 GitHub Pages 功能即可访问到构建好的站点了。"]],["$","h2",{"id":"cloudflare-pages"},["Cloudflare Pages"]],["$","p",{},["如果觉得 GitHub Actions + GitHub Pages 比较麻烦的话，才推出不久的 Cloudflare Pages 或许是一个不错的选择。"]],["$","p",{},["前往 ",["$","a",{"href":"https://dash.cloudflare.com","rel":"external nofollow noreferrer"},["CloudFlare 管理面板"]]," 登录账号后即可在右侧找到「网页」或者「Pages」功能的入口。"]],["$","p",{},["点击新建按钮，选择要使用的仓库，点击下一步。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/9HpOja1N6JIK4DP.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["Cloudflare Pages 的构建配置模板中并没有给出 Hexo 的模板，所以需要自己填写："]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/zc7GdhKqCSfliQ1.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["完成之后点击确定就可以开始构建站点了。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/Z9YrJGNByXhKbkl.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["构建完成后，访问分配的 ",["$","code",{},["pages.dev"]]," 子域名即可查看构建好的站点。"]],["$","p",{},["可以在「自定义域」选项卡中添加自定义域名。"]],["$","h2",{"id":"netlify"},["Netlify"]],["$","p",{},["Netlify 是一家为静态网站提供托管服务的平台，有一定的免费额度，对于小型站点来说使用免费套餐就足够了。"]],["$","p",{},["首先登陆账号，点击「New site from Git」按钮新建一个站点。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/sULdZkfIgOBhzJP.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["可以看到 Netlify 自动识别出了博客使用的框架并且填充好了构建命令，接下来只需要点击下一步即可。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/yVlnMEJgeLSzwFD.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["新建站点完成以后可以在「Domain Settings」页面中修改默认分配的 ",["$","code",{},["netlify.app"]]," 子域名，并添加自定义域名。"]],["$","h2",{"id":"vercel"},["Vercel"]],["$","p",{},["Vercel 是一个类似于 Netlify 的静态网站托管平台（Vercel 也支持托管 Serverless 函数，不过不在本文的讨论范围内）。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/22/1oLr8fiODTNXSRP.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["绑定好 GitHub 账号后导入一个新的项目即可。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/10/31/EAsH2CWLUTZFeXu.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["Vercel 也和 Netlify 自动填充好了构建命令，如果没有特殊需求可以直接点击下一步。"]],["$","p",{},["可以在项目的域名设置中绑定自定义域名。"]],["$","h2",{"id":"参考资料-2"},["参考资料"]],["$","ol",{},[["$","li",{},[["$","a",{"href":"https://blog.ichr.me/post/automated-deployment-of-serverless-static-blog/","rel":"external nofollow noreferrer"},["初探无后端静态博客自动化部署方案"]],"，ChrAlpha，2020 年 2 月 14 日。"]],["$","li",{},[["$","a",{"href":"https://stackoverflow.com/questions/42032035/finding-files-older-than-certain-dates-in-git-repository","rel":"external nofollow noreferrer"},["Finding files older than certain dates in Git repository"]],"，Scott Weldon (on Stack Overflow)，2017 年 2 月 7 日。"]],["$","li",{},[["$","a",{"href":"https://blog.skk.moe/post/deploy-blog-to-cf-workers-site/","rel":"external nofollow noreferrer"},["将 Hexo 部署到 Cloudflare Workers Site 上的趟坑记录"]],"，Sukka，2020 年 6 月 7 日。"]]]]],"thumb":"https://s1.baoshuo.ren/2021/10/31/uyZDJLU9NntF684.png","date":"2021-11-10","updated":"2021-11-10","isoDate":"2021-11-10T15:57:14.000Z","isoUpdate":"2021-11-10T15:57:14.000Z","categories":[{"name":"技术向","url":"/categories/%E6%8A%80%E6%9C%AF%E5%90%91/"}],"tags":[{"name":"GitHub Actions","url":"/tags/GitHub-Actions/"},{"name":"Hexo","url":"/tags/Hexo/"},{"name":"自动化","url":"/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"},{"name":"Vercel","url":"/tags/Vercel/"},{"name":"Netlify","url":"/tags/Netlify/"},{"name":"Cloudflare","url":"/tags/Cloudflare/"}],"license":null,"permalink":"https://blog.baoshuo.ren/post/auto-deploy-static-blog/","url":"/post/auto-deploy-static-blog/","prev":{"title":"再见，2021 —— 我的 2021 年度总结","url":"/post/goodbye-2021/"},"next":{"title":"USTC Hackergame 2021 Write Up","url":"/post/ustc-hackergame-2021-write-up/"},"toc":{"0":{"text":"GitHub Actions","id":"github-actions"},"1":{"text":"Cloudflare Pages","id":"cloudflare-pages"},"2":{"text":"Netlify","id":"netlify"},"3":{"text":"Vercel","id":"vercel"},"4":{"text":"参考资料","id":"参考资料-2"}},"hasToc":true,"comments":true,"wordCount":"约 1.1 千字"}},"__N_SSG":true}