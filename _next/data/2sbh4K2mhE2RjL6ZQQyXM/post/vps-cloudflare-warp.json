{"pageProps":{"title":"使用 Cloudflare Warp 为单栈 VPS 添加双栈网络访问 - 宝硕博客","post":{"title":"使用 Cloudflare Warp 为单栈 VPS 添加双栈网络访问","excerpt":"Warp 是 Cloudflare 提供的一项基于 WireGuard 的网络流量安全及加速服务，能够让你通过连接到 Cloudflare 的边缘节点实现隐私保护及链路优化。","content":"<p><a href=\"https://blog.cloudflare.com/1111-warp-better-vpn/\">Warp</a> 是 Cloudflare 提供的一项基于 WireGuard 的网络流量安全及加速服务，能够让你通过连接到 Cloudflare 的边缘节点实现隐私保护及链路优化。</p>\n<span id=\"more\"></span>\n<p>由于 Cloudflare 官方的 <a href=\"https://developers.cloudflare.com/warp-client/setting-up/linux\">Warp Client</a> 过于臃肿，导致我看到安装包大小后就决定直接放弃安装，于是我选择了 <a href=\"https://github.com/ViRb3/wgcf\">ViRb3/wgcf</a> 替代。</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/dHClLqSsvDKbrBc.png\" alt=\"\" loading=\"lazy\"></p>\n<h2 id=\"安装依赖\"><a class=\"anchor\" href=\"#安装依赖\"></a>安装依赖</h2>\n<p>可以前往 <a href=\"https://github.com/ViRb3/wgcf/releases/latest\">Releases 页面</a> 下载编译好的二进制文件以供使用。</p>\n<p>也可使用如下命令安装：</p>\n<pre><code class=\"hljs bash\">curl -Ls https://git.io/wgcf-installer.sh | bash</code></pre>\n<p>安装好之后运行 <code>wgcf --help</code> ，得到类似下图的输出即为安装成功：</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/lDaywAzQGd8HI9S.png\" alt=\"\" loading=\"lazy\"></p>\n<p>另外还需按照 <a href=\"https://www.wireguard.com/install/\">WireGuard 官网</a> 上的说明安装 WireGuard 。</p>\n<p>根据需求可能还需要安装 <code>resolvconf</code> 。</p>\n<h2 id=\"生成-wireguard-配置文件\"><a class=\"anchor\" href=\"#生成-wireguard-配置文件\"></a>生成 WireGuard 配置文件</h2>\n<p>先使用 <code>wgcf register</code> 命令注册 Warp ，使用键盘上的方向键选择 「Yes」 并回车确认：</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/MYT5bkX4r2pGHUv.png\" alt=\"\" loading=\"lazy\"></p>\n<p>注册成功后的提示：</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/y4homkVbqsr9PYj.png\" alt=\"\" loading=\"lazy\"></p>\n<p>之后使用 <code>wgcf generate</code> 命令生成配置文件。</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/3zWUZYTdGhn9qkP.png\" alt=\"\" loading=\"lazy\"></p>\n<h2 id=\"修改-wireguard-配置文件\"><a class=\"anchor\" href=\"#修改-wireguard-配置文件\"></a>修改 WireGuard 配置文件</h2>\n<p>这是一份生成出来的配置文件：</p>\n<pre><code class=\"hljs ini\"><span class=\"hljs-section\">[Interface]</span>\n<span class=\"hljs-attr\">PrivateKey</span> = ******\n<span class=\"hljs-attr\">Address</span> = <span class=\"hljs-number\">172.16</span>.*.*/<span class=\"hljs-number\">32</span>\n<span class=\"hljs-attr\">Address</span> = fd01:******/<span class=\"hljs-number\">128</span>\n<span class=\"hljs-attr\">DNS</span> = <span class=\"hljs-number\">1.1</span>.<span class=\"hljs-number\">1.1</span>\n<span class=\"hljs-attr\">MTU</span> = <span class=\"hljs-number\">1280</span>\n\n<span class=\"hljs-section\">[Peer]</span>\n<span class=\"hljs-attr\">PublicKey</span> = ******\n<span class=\"hljs-attr\">AllowedIPs</span> = <span class=\"hljs-number\">0.0</span>.<span class=\"hljs-number\">0.0</span>/<span class=\"hljs-number\">0</span>\n<span class=\"hljs-attr\">AllowedIPs</span> = ::/<span class=\"hljs-number\">0</span>\n<span class=\"hljs-attr\">Endpoint</span> = engage.cloudflareclient.com:<span class=\"hljs-number\">2408</span></code></pre>\n<ul>\n<li>添加 IPv4 网络访问\n<ol>\n<li>删去 <code>[Interface]</code> 中的 <code>Address = fd01:******/128</code> ；</li>\n<li>删去 <code>[Peer]</code> 中的 <code>AllowedIPs = ::/0</code> ；</li>\n<li>将 Endpoint 的域名替换为解析出来的 IPv6 地址，如 <code>[2606:4700:d0::a29f:c001]:2408</code> 。</li>\n</ol>\n</li>\n<li>添加 IPv6 网络访问\n<ol>\n<li>删去 <code>[Interface]</code> 中的 <code>Address = 172.16.*.*/32</code> ；</li>\n<li>删去 <code>[Peer]</code> 中的 <code>AllowedIPs = 0.0.0.0/0</code> ；</li>\n<li>将 Endpoint 的域名替换为解析出来的 IPv4 地址，如 <code>162.159.192.1:2408</code> 。</li>\n</ol>\n</li>\n</ul>\n<p>如果不需要使用 Cloudflare 的 DNS 服务可以删去 <code>DNS = 1.1.1.1</code> 这一行，使用的话需要安装 <code>resolvconf</code> 。</p>\n<h2 id=\"启动-wireguard-隧道\"><a class=\"anchor\" href=\"#启动-wireguard-隧道\"></a>启动 WireGuard 隧道</h2>\n<p>将刚才修改好的配置文件移动到 <code>/etc/wireguard/</code> 目录下，推荐命名为 <code>wgcf.conf</code> ，下面的操作以这个文件名为准。</p>\n<p>使用 <code>systemd enable --now wg-quick@wgcf</code> 命令启动隧道，然后使用 <code>wg show wgcf</code> 命令查看隧道状态。</p>\n<p>如果在启动时出现了错误，可以使用 <code>systemd status wg-quick@wgcf</code> 命令查看错误信息，修复后使用 <code>systemd start wg-quick@wgcf</code> 启动隧道。</p>\n<p><img src=\"https://s1.baoshuo.ren/2021/07/15/M9D1L2rFfHCPtcU.png\" alt=\"\" loading=\"lazy\"></p>\n<p>之后就可以享受双栈网络带来的便利了~</p>\n<p>注：日常如果需要重启隧道可以使用 <code>systemctl restart wg-quick@wgcf</code> 命令。</p>\n<h2 id=\"后记-t7\"><a class=\"anchor\" href=\"#后记-t7\"></a>后记</h2>\n<p>折腾这些的原因是我从某个 Player IX 那里嫖的 VM 没有提供 IPv4 网络访问权限，这让我日常的维护工作麻烦了很多，于是我想到了 Cloudflare Warp 这个东西。CloudFlare Warp 提供的网络访问相较于 <a href=\"http://TunnelBroker.net\">TunnelBroker.net</a> 、 <a href=\"http://TunnelBroker.ch\">TunnelBroker.ch</a> 等一众隧道要好很多，延迟并不像其他隧道那样高。</p>\n<p>在查找资料的过程中我也发现了很多博客里面所描述的内容有误或已经过时，所以综合其他文章的内容加上自己的实践，写下了这篇文章。</p>\n<h2 id=\"参考资料-t12\"><a class=\"anchor\" href=\"#参考资料-t12\"></a>参考资料</h2>\n<ol>\n<li><a href=\"https://luotianyi.vc/5252.html\">【WGCF】连接 CF WARP 为服务器添加 IPv4/IPv6 网络 - Luminous’ Home</a></li>\n<li><a href=\"https://p3terx.com/archives/use-cloudflare-warp-to-add-extra-ipv4-or-ipv6-network-support-to-vps-servers-for-free.html\">Cloudflare WARP 给 VPS 服务器额外添加 IPv4 或 IPv6 网络获得“原生”IP - P3TERX</a></li>\n</ol>\n","thumb":"https://s1.baoshuo.ren/2021/08/15/UOBRkoXaV9wnYW6.jpg","date":"2021-07-15","updated":"2021-07-15","isoDate":"2021-07-15T09:57:25.000Z","isoUpdate":"2021-07-15T09:57:25.000Z","categories":[{"name":"技术向","url":"/categories/%E6%8A%80%E6%9C%AF%E5%90%91/"}],"tags":[{"name":"Cloudflare","url":"/tags/Cloudflare/"},{"name":"Linux","url":"/tags/Linux/"}],"license":null,"permalink":"https://blog.baoshuo.ren/post/vps-cloudflare-warp/","prev":{"title":"NOI Linux 2.0 上手体验","url":"/post/noi-linux-2/"},"next":{"title":"搭建 BIRD Looking Glass 速成指北","url":"/post/bird-looking-glass/"},"toc":{"1":{"text":"安装依赖","id":"安装依赖"},"2":{"text":"生成 WireGuard 配置文件","id":"生成-wireguard-配置文件"},"3":{"text":"修改 WireGuard 配置文件","id":"修改-wireguard-配置文件"},"4":{"text":"启动 WireGuard 隧道","id":"启动-wireguard-隧道"},"5":{"text":"后记","id":"后记-t7"},"6":{"text":"参考资料","id":"参考资料-t12"}},"hasToc":true,"comments":true},"__post":true},"__N_SSG":true}