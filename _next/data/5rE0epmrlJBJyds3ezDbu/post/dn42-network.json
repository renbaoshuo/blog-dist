{"pageProps":{"title":"初探 DN42 网络 - 宝硕博客","post":{"title":"初探 DN42 网络","excerpt":"DN42 全称 Decentralized Network 42（42 号去中心网络），是一个大型、去中心化的 BGP 网络。DN42 的目的是模拟一个互联网。它使用了大量在目前互联网骨干上应用的技术（例如 BGP 和递归 DNS），可以很好地模拟一个真实的网络环境。","content":[["$","p",{},["DN42 全称 Decentralized Network 42（42 号去中心网络），是一个大型、去中心化的 BGP 网络。DN42 的目的是模拟一个互联网。它使用了大量在目前互联网骨干上应用的技术（例如 BGP 和递归 DNS），可以很好地模拟一个真实的网络环境。"]],["$","span",{"id":"more"},[]],["$","p",{},["DN42 适合以下类别的用户："]],["$","ul",{},[["$","li",{},["想要研究网络技术，练习服务器、路由器等网络设备配置，甚至后续在真实互联网建立 AS 的用户。"]],["$","li",{},["已经拥有真实 AS ，但担心自己",["$","a",{"href":"https://blog.cloudflare.com/how-verizon-and-a-bgp-optimizer-knocked-large-parts-of-the-internet-offline-today/","rel":"external nofollow noreferrer"},["配置错误广播出错误路由、干掉半个互联网"]],"，希望有个地方测试的用户。"]]]],["$","p",{},["DN42 不适合以下类别的用户："]],["$","ul",{},[["$","li",{},["单纯想要保护隐私、规避网络审查的用户"]],["$","li",{},["在网内消耗大量流量，例如用于解锁流媒体服务的用户"]]]],["$","p",{},["所以，DN42 的使用门槛还是比较高的。这与在真实互联网中一样，你要扮演一个 ISP （互联网服务提供商），注册自己的个人信息， ASN 号码，IPv4 和 IPv6 的地址池，并且使用 BGP 在自己的服务器上广播它们。你还要和其它的用户联系，和他们进行 Peering（对等互联），一步步进入完整的 DN42 网络。"]],["$","hr",{},[]],["$","p",{},["DN42 在 ",["$","code",{},["172.20.0.0/14"]]," 和 ",["$","code",{},["fd00::/8"]]," 上运行，而这两个 IP 段都是分配给内网使用的。换句话说，你在 DN42 上怎么折腾，都不会影响到服务器其它的互联网连接。"]],["$","p",{},["你可以通过加入 ",["$","a",{"href":"https://t.me/Dn42Chat","rel":"external nofollow noreferrer"},["Telegram 群组"]]," 或者 ",["$","a",{"href":"irc://irc.hackint.org/#dn42","rel":"external nofollow noreferrer"},["IRC 频道"]]," 来寻求帮助。"]],["$","p",{},["请注意，DN42 是一个测试网络，所有人都在帮助所有人。即使你不小心搞砸了，也没有人会指责你。"]],["$","p",{},["欢迎在搭建完成自己的内网以后与我进行对等互联，可以访问 ",["$","a",{"href":"https://dn42.baoshuo.ren","rel":"external nofollow noreferrer"},["dn42.baoshuo.ren"]]," 获取更多信息。"]],["$","p",{},["若无特别说明，本文中所使用的系统环境均为 ",["$","code",{},["Ubuntu 20.04.2 LTS"]]," ，本文中所有使用 ",["$","code",{},["<>"]]," 包裹的内容均需要自行替换。"]],["$","h2",{"id":"注册-dn42"},["注册 DN42"]],["$","p",{},["在注册过程中会大量使用到一些 UNIX 工具（如 Git 、 GPG 等），所以最好使用 Linux 或者 macOS 系统完成整个流程，如果你正在使用 Windows 系统，那么可以使用 ",["$","a",{"href":"http://aka.ms/wsl","rel":"external nofollow noreferrer"},["WSL"]]," 。"]],["$","h3",{"id":"注册前的准备"},["注册前的准备"]],["$","ul",{},[["$","li",{},["了解如何编写 RPSL （",["$","a",{"href":"https://tools.ietf.org/html/rfc2622/","rel":"external nofollow noreferrer"},["RFC2622"]],"） 格式的配置文件。"]],["$","li",{},["了解如何使用 ",["$","a",{"href":"https://zh.wikipedia.org/wiki/%E6%97%A0%E7%B1%BB%E5%88%AB%E5%9F%9F%E9%97%B4%E8%B7%AF%E7%94%B1","rel":"external nofollow noreferrer"},["CIDR"]]," （",["$","a",{"href":"https://tools.ietf.org/html/rfc1518","rel":"external nofollow noreferrer"},["RFC1518"]],"，",["$","a",{"href":"https://tools.ietf.org/html/rfc1519","rel":"external nofollow noreferrer"},["RFC1519"]],"） 格式表示 IP 地址块。"]],["$","li",{},["熟悉 ",["$","a",{"href":"https://dn42.dev","rel":"external nofollow noreferrer"},["DN42 Wiki"]]," 中的 ",["$","a",{"href":"https://dn42.dev/howto/Getting-Started","rel":"external nofollow noreferrer"},["Getting-Started"]]," 、 ",["$","a",{"href":"https://dn42.dev/howto/Address-Space","rel":"external nofollow noreferrer"},["Address Space"]]," 页面中的内容。"]],["$","li",{},["在 ",["$","a",{"href":"https://git.dn42.dev","rel":"external nofollow noreferrer"},["DN42 Git"]]," 中有一个注册好的账户。"]],["$","li",{},["会使用英文与他人交流。"]]]],["$","h3",{"id":"克隆-dn42-注册表-git-仓库"},["克隆 DN42 注册表 Git 仓库"]],["$","p",{},["将 ",["$","a",{"href":"https://git.dn42.dev/dn42/registry","rel":"external nofollow noreferrer"},["dn42/registry"]]," 这个仓库 clone 到本地。"]],["$","p",{},["新建一个名为 ",["$","code",{},["<用户名>-<日期, YYYYMMDD>/<自定义名称>"]]," 的分支。"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["git checkout -b <用户名>-<日期, YYYYMMDD>/register"]]]],["$","h3",{"id":"注册维护者"},["注册维护者"]],["$","p",{},["在仓库的 ",["$","code",{},["data/mntner"]]," 目录下新建一个文件，命名为 ",["$","code",{},["<昵称>-MNT"]]," 。"]],["$","p",{},["文件内填入以下内容："]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["mntner:             <昵称>-MNT\nadmin-c:            <昵称>-DN42\ntech-c:             <昵称>-DN42\nauth:               <身份验证信息>\nmnt-by:             <维护者>\nsource:             DN42"]]]],["$","p",{},["示例：",["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/data/mntner/BAOSHUO-MNT","rel":"external nofollow noreferrer"},[["$","code",{},["data/mntner/BAOSHUO-MNT"]]," at dn42/registry@master"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["mntner"]]," ：维护者（全称为 Maintainer），这个维护者的名称，与文件名相同。"]],["$","li",{},[["$","code",{},["admin-c"]]," ：管理员联系信息（Admin Contact），需要指向 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中的 ",["$","code",{},["person"]]," 文件，一般为 ",["$","code",{},["<昵称>-DN42"]]," 。"]],["$","li",{},[["$","code",{},["tech-c"]]," ：技术人员联系信息（Tech Contact），需要指向 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中的 ",["$","code",{},["person"]]," 文件，一般为 ",["$","code",{},["<昵称>-DN42"]]," 。"]],["$","li",{},[["$","code",{},["auth"]]," ：身份验证信息，接受 ",["$","strong",{},["GPG 公钥"]]," 和 ",["$","strong",{},["SSH 公钥"]]," ，可以查看 ",["$","a",{"href":"https://dn42.dev/howto/Registry-Authentication","rel":"external nofollow noreferrer"},["Registry Authentication"]]," 页面获取详细信息。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（全称为 Maintain by），此处需要指向这个维护者本身，即 ",["$","code",{},["<昵称>-MNT"]]," 。"]],["$","li",{},[["$","code",{},["source"]]," ：信息来源，默认为 ",["$","code",{},["DN42"]]," 。"]]]],["$","h3",{"id":"注册联系人"},["注册联系人"]],["$","p",{},["在仓库的 ",["$","code",{},["data/person"]]," 目录下新建一个文件，命名为 ",["$","code",{},["<昵称>-DN42"]]," 。"]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["person:             <姓名>\ncontact:            <邮箱>\nnic-hdl:            <NIC 句柄>\nmnt-by:             <维护者>\nsource:             DN42"]]]],["$","p",{},["示例：",["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/data/person/BAOSHUO-DN42","rel":"external nofollow noreferrer"},[["$","code",{},["data/person/BAOSHUO-DN42"]]," at dn42/registry@master"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["person"]]," ：姓名。"]],["$","li",{},[["$","code",{},["contact"]]," ：联系方式，一般为邮箱。"]],["$","li",{},[["$","code",{},["nic-hdl"]]," ：NIC 句柄（即 ",["$","a",{"href":"https://en.wikipedia.org/wiki/NIC_handle","rel":"external nofollow noreferrer"},["NIC handle"]],"），指向文件本身，与文件名相同。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（全称为 Maintain by），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E7%BB%B4%E6%8A%A4%E8%80%85"},["注册维护者"]]," 一节中注册的的维护者信息。"]],["$","li",{},[["$","code",{},["source"]]," ：固定为 ",["$","code",{},["DN42"]],"。"]]]],["$","h3",{"id":"注册-asn"},["注册 ASN"]],["$","p",{},["在国际互联网上，ASN 范围 ",["$","code",{},["4200000000 - 4294967294"]]," 是被保留以供私人使用的，而 DN42 占用的就是其中的一块： ",["$","code",{},["4242420000 - 4242429999"]]," 。目前 DN42 开放注册的 ASN 范围是 ",["$","code",{},["4242420000 - 4242423999"]]," ，只需要在这个区间里面挑一个没有被他人占用的号码即可。"]],["$","p",{},["DN42 Registry 的管理员 burble 提供了一个在线查看可用 ASN 的工具: ",["$","a",{"href":"https://explorer.burble.com/free#/asn","rel":"external nofollow noreferrer"},["DN42 Free ASN Explorer"]]," 。访问该页面就会随机生成 10 个当前还未注册的 ASN 以便使用。"]],["$","p",{},["在仓库的 ",["$","code",{},["data/aut-num"]]," 目录下新建一个文件，命名为刚才选中的 AS 号码。"]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["aut-num:            <AS 号码, 带 AS 前缀>\nas-name:            <AS 名称>\ndescr:              <AS 简介>\nadmin-c:            <NIC 句柄>\ntech-c:             <NIC 句柄>\nmnt-by:             <维护者>\nsource:             DN42"]]]],["$","p",{},["示例：",["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/data/aut-num/AS4242420247","rel":"external nofollow noreferrer"},[["$","code",{},["data/aut-num/AS4242420247"]]," at dn42/registry@master"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["aut-num"]]," ：AS 号，此处可以使用私有 AS 号码，也可以使用公网 AS 号码（不推荐）。"]],["$","li",{},[["$","code",{},["as-name"]]," ：AS 的名称，可以设置为 ",["$","code",{},["<昵称>-AS"]]," 。"]],["$","li",{},[["$","code",{},["descr"]]," ：（选填）AS 简介，随意填写。"]],["$","li",{},[["$","code",{},["admin-c"]]," ：管理员联系信息（Admin Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["tech-c"]]," ：技术员联系信息（Tech Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（Maintain by），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E7%BB%B4%E6%8A%A4%E8%80%85"},["注册维护者"]]," 一节中注册的的维护者信息。"]],["$","li",{},[["$","code",{},["source"]]," ：如果使用私有 AS 号码则此处填写 ",["$","code",{},["DN42"]]," ，否则填写 ASN 所对应的 RIR 名称。"]]]],["$","h3",{"id":"注册-ipv4-地址块"},["注册 IPv4 地址块"]],["$","p",{},[["$","em",{},["如果您想在 DN42 上创建一个 IPv6 Only 网络，请不要注册 IPv4 地址块，并忽略 ",["$","a",{"href":"#%E6%B7%BB%E5%8A%A0%E8%B7%AF%E7%94%B1%E8%AE%B0%E5%BD%95"},["添加路由记录"]]," 一节中的 IPv4 部分。"]]]],["$","p",{},["在国际互联网上， ",["$","code",{},["172.16.0.0/12"]]," 是由 ",["$","a",{"href":"https://tools.ietf.org/html/rfc1918","rel":"external nofollow noreferrer"},["RFC1918"]]," 规定的由专用网络使用的 IP 地址块，而 DN42 占用的就是其中的一块： ",["$","code",{},["172.20.0.0/14"]]," 。目前 DN42 开放注册的地址块范围可以在 ",["$","a",{"href":"https://dn42.dev/howto/Address-Space#ipv4-address-space","rel":"external nofollow noreferrer"},["Address Space"]]," 页面上查看。"]],["$","p",{},["DN42 Registry 的管理员 burble 提供了一个在线查看可用 IPv4 地址块的网站，点击 ",["$","a",{"href":"https://explorer.burble.com/free#/4","rel":"external nofollow noreferrer"},["DN42 Free IPv4 Explorer"]]," 即可随机生成 10 个当前还未注册的 IPv4 地址块。"]],["$","p",{},["和在真实互联网上一样，DN42 的 IPv4 地址资源也是十分紧缺的，因此 IPv4 的申请原则是「够用就好」。如果节点数量足够少，只申请 ",["$","code",{},["/28"]]," 或 ",["$","code",{},["/29"]]," 大小的地址块就够用了。"]],["$","p",{},["在仓库的 ",["$","code",{},["data/inetnum"]]," 目录下新建一个文件，命名为 IP 地址块的 CIDR 格式，并使用 ",["$","code",{},["_"]]," 代替 ",["$","code",{},["/"]],"。"]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["inetnum:            <起始 IP 地址> - <结束 IP 地址>\ncidr:               <IP 地址块的 CIDR 格式>\nnetname:            <IP 地址块名称>\ndescr:              <IP 地址块简介>\ncountry:            <IP 地址块所属国家>\nadmin-c:            <NIC 句柄>\ntech-c:             <NIC 句柄>\nmnt-by:             <维护者>\nstatus:             ASSIGNED\nsource:             DN42"]]]],["$","p",{},["示例：",["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/data/inetnum/172.23.250.64_26","rel":"external nofollow noreferrer"},[["$","code",{},["data/inetnum/172.23.250.64_26"]]," at dn42/registry@master"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["inetnum"]]," ：这个地址块的范围。"]],["$","li",{},[["$","code",{},["cidr"]]," ：以 CIDR 格式表示的这个地址块的范围，含义与 ",["$","code",{},["inetnum"]]," 相同。"]],["$","li",{},[["$","code",{},["netname"]]," ：这个地址块的名称。可以设置为 ",["$","code",{},["<昵称>-IPV4"]]," 。"]],["$","li",{},[["$","code",{},["descr"]]," ：（选填）这个地址块的简介。"]],["$","li",{},[["$","code",{},["nserver"]]," ：（选填）IP 地址反向解析的 DNS 服务器。"]],["$","li",{},[["$","code",{},["country"]]," ：你的 ",["$","a",{"href":"https://zh.wikipedia.org/wiki/ISO_3166","rel":"external nofollow noreferrer"},["ISO 3166"]]," 国家代码，填 ",["$","code",{},["CN"]]," 代表中国大陆地区。"]],["$","li",{},[["$","code",{},["admin-c"]]," ：管理员联系信息（Admin Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["tech-c"]]," ：技术员联系信息（Tech Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（Maintain by），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E7%BB%B4%E6%8A%A4%E8%80%85"},["注册维护者"]]," 一节中注册的的维护者信息。"]],["$","li",{},[["$","code",{},["status"]]," ：固定为 ",["$","code",{},["ASSIGNED"]],"。"]],["$","li",{},[["$","code",{},["source"]]," ：固定为 ",["$","code",{},["DN42"]],"。"]]]],["$","h3",{"id":"注册-ipv6-地址块"},["注册 IPv6 地址块"]],["$","p",{},["在国际互联网上， ",["$","code",{},["fc00::/7"]]," 是由 ",["$","a",{"href":"https://tools.ietf.org/html/rfc4193","rel":"external nofollow noreferrer"},["RFC4193"]]," 定义的 ",["$","a",{"href":"https://en.wikipedia.org/wiki/Unique_local_address","rel":"external nofollow noreferrer"},["唯一本地地址"]],"，而 DN42 占用的就是其中的一块： ",["$","code",{},["fd00::/8"]]," 。目前 DN42 开放注册的地址块范围可以在 ",["$","a",{"href":"https://dn42.dev/howto/Address-Space#ipv6-address-space","rel":"external nofollow noreferrer"},["Address Space"]]," 页面上查看。"]],["$","p",{},["DN42 Registry 的管理员 burble 提供了一个在线查看可用 IPv6 地址块的网站，点击 ",["$","a",{"href":"https://explorer.burble.com/free#/6","rel":"external nofollow noreferrer"},["DN42 Free IPv6 Explorer"]]," 即可随机生成 10 个当前还未注册的 IPv6 地址块。"]],["$","p",{},["在仓库的 ",["$","code",{},["data/inet6num"]]," 目录下新建一个文件，命名为 IPv6 地址块的 CIDR 格式，并使用 ",["$","code",{},["_"]]," 代替 ",["$","code",{},["/"]],"。"]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["inet6num:           <起始 IPv6 地址> - <结束 IPv6 地址>\ncidr:               <IPv6 地址块的 CIDR 格式>\nnetname:            <IPv6 地址块名称>\ndescr:              <IPv6 地址块简介>\ncountry:            <IPv6 地址块所属国家>\nadmin-c:            <NIC 句柄>\ntech-c:             <NIC 句柄>\nmnt-by:             <维护者>\nstatus:             ASSIGNED\nsource:             DN42"]]]],["$","p",{},["示例：",["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/data/inet6num/fd42:4242:247::_48","rel":"external nofollow noreferrer"},[["$","code",{},["data/inet6num/fd42:4242:247::_48"]]," at dn42/registry@master"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["inet6num"]]," ：这个地址块的范围。"]],["$","li",{},[["$","code",{},["cidr"]]," ：使用 CIDR 格式表示的这个地址块的范围，含义与 ",["$","code",{},["inet6num"]]," 相同。"]],["$","li",{},[["$","code",{},["netname"]]," ：这个地址块的名称。可以设置为 ",["$","code",{},["<昵称>-IPV6"]]," 。"]],["$","li",{},[["$","code",{},["descr"]]," ：（选填）这个地址块的简介。"]],["$","li",{},[["$","code",{},["nserver"]]," ：（选填）IP 地址反向解析的 DNS 服务器。"]],["$","li",{},[["$","code",{},["country"]]," ：你的 ",["$","a",{"href":"https://zh.wikipedia.org/wiki/ISO_3166","rel":"external nofollow noreferrer"},["ISO 3166"]]," 国家代码，填 ",["$","code",{},["CN"]]," 代表中国大陆地区。"]],["$","li",{},[["$","code",{},["admin-c"]]," ：管理员联系信息（Admin Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["tech-c"]]," ：技术员联系信息（Tech Contact），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E8%81%94%E7%B3%BB%E4%BA%BA"},["注册联系人"]]," 一节中注册的 NIC 句柄。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（Maintain by），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E7%BB%B4%E6%8A%A4%E8%80%85"},["注册维护者"]]," 一节中注册的的维护者信息。"]],["$","li",{},[["$","code",{},["status"]]," ：固定为 ",["$","code",{},["ASSIGNED"]],"。"]],["$","li",{},[["$","code",{},["source"]]," ：固定为 ",["$","code",{},["DN42"]],"。"]]]],["$","h3",{"id":"添加路由记录"},["添加路由记录"]],["$","p",{},["在仓库的 ",["$","code",{},["data/route"]]," 目录下新建一个文件，命名为 IP 地址块的 CIDR 格式，并使用 ",["$","code",{},["_"]]," 代替 ",["$","code",{},["/"]],"。"]],["$","pre",{},[["$","code",{"class":"hljs rpsl"},["route:              <IP 地址块的 CIDR 格式>\ndescr:              <简介>\norigin:             <AS 号码, 带 AS 前缀>\nmnt-by:             <维护者>\nsource:             DN42"]]]],["$","ul",{},[["$","li",{},[["$","code",{},["route"]]," ：这个 IPv4 地址块的范围，CIDR 格式。"]],["$","li",{},[["$","code",{},["descr"]]," ：（选填）路由简介。"]],["$","li",{},[["$","code",{},["origin"]]," ：填写你的 AS 号码。"]],["$","li",{},[["$","code",{},["mnt-by"]]," ：由谁维护（Maintain by），指向你在 ",["$","a",{"href":"#%E6%B3%A8%E5%86%8C%E7%BB%B4%E6%8A%A4%E8%80%85"},["注册维护者"]]," 一节中注册的的维护者信息。"]],["$","li",{},[["$","code",{},["source"]]," ：固定为 ",["$","code",{},["DN42"]],"。"]]]],["$","p",{},["如需添加 IPv6 路由，将本节所述的 ",["$","code",{},["route"]]," 改为 ",["$","code",{},["route6"]]," 即可，此处不再赘述。"]],["$","h3",{"id":"上传更改到-dn42-注册表"},["上传更改到 DN42 注册表"]],["$","p",{},["完成以上步骤之后，使用 ",["$","code",{},["git diff"]]," 查看文件变动，检查无误后，使用 ",["$","code",{},["git add ."]]," 暂存。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/08/14/RhjwYHFGcaKUSye.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["运行仓库根目录下的 ",["$","code",{},["./check-my-stuff <维护者>"]]," 检查文件内容是否有误，确定无误后，提交。"]],["$","p",{},["在提交时，如果需要使用 GPG 签名，需要在添加 ",["$","code",{},["-S"]]," 参数，如 ",["$","code",{},["git commit -S"]]," ；如果使用 SSH 签名，请直接使用 ",["$","code",{},["git commit"]]," 进行提交，待提交后再进行签名工作。"]],["$","p",{},["使用下面的命令进行签名："]],["$","pre",{},[["$","code",{"class":"hljs bash"},["./sign-my-commit --ssh --key <SSH 私钥文件> <维护者>"]]]],["$","p",{},["之后使用下面的命令上传即可："]],["$","pre",{},[["$","code",{"class":"hljs bash"},["git push --set-upstream origin <用户名>-<日期, YYYYMMDD>/register"]]]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/04/04/1YwNjs8uvOJMFoq.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["上传后在 DN42 Git 中切换到自己的分支，并创建一个合并请求，等待管理员审核。"]],["$","h3",{"id":"注意事项"},["注意事项"]],["$","ol",{},[["$","li",{},["各个项目的键和值之间有一长串空格，键、冒号与空格的总长度必须是 20 个字符，且不能随意修改。为了编辑时的方便，注册表中提供了一个脚本 ",["$","code",{},["fmt-my-stuff"]]," ，只需要使用 ",["$","code",{},["./fmt-my-stuff <维护者>"]]," 即可自动完成此步骤。"]],["$","li",{},["DN42 Registry 的工作语言是英语。请使用英语完成全部流程，以免出现不必要的麻烦。"]],["$","li",{},["请认真对待管理员提出的更改请求，按照要求完成全部修改后直接上传到原分支下即可，无需再新开合并请求。"]],["$","li",{},["推荐使用随机的 IPv4 与 IPv6 地址块，避免与其他网络重复。请明白，DN42 并不是这些网络资源的权威注册机构。"]]]],["$","h2",{"id":"dn42-bird2-使用入门"},["DN42 BIRD2 使用入门"]],["$","p",{},["如无特别说明，本部分中所使用的 BIRD 版本为 ",["$","code",{},["2.0.7"]]," 。"]],["$","h3",{"id":"安装-bird2"},["安装 BIRD2"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["apt update\napt install bird2 -y"]]]],["$","p",{},["一般情况下，执行此命令即可自动安装 BIRD2 并启动系统服务。"]],["$","h3",{"id":"编写-bird-配置文件"},["编写 BIRD 配置文件"]],["$","p",{},["对于刚刚加入 DN42 网络的新人来说，推荐使用 ",["$","a",{"href":"https://dn42.dev/howto/Bird2#example-configuration","rel":"external nofollow noreferrer"},["howto/Bird2 - DN42 Wiki"]]," 中的示例配置以节省配置时间。"]],["$","p",{},["这套配置默认使用了 Multi Protocol BGP ，如果不想使用此功能请自行编写配置文件，如果没有 DN42 IPv4 地址需要去掉文件中的 IPv4 部分。"]],["$","p",{},["将以下配置写入到 ",["$","code",{},["/etc/bird/bird.conf"]]," 中："]],["$","pre",{},[["$","code",{"class":"hljs pgsql"},["define OWNAS       = <",["$","span",{"class":"hljs-keyword"},["AS"]]," 号>;\ndefine OWNIP       = <DN42 IPv4 地址>;\ndefine OWNIPv6     = <DN42 IPv6 地址>;\ndefine OWNNET      = <DN42 IPv4 地址块, ",["$","span",{"class":"hljs-type"},["CIDR"]]," 格式>;\ndefine OWNNETv6    = <DN42 IPv6 地址块, ",["$","span",{"class":"hljs-type"},["CIDR"]]," 格式>;\ndefine OWNNETSET   = [ <DN42 IPv4 地址块, ",["$","span",{"class":"hljs-type"},["CIDR"]]," 格式>+ ];\ndefine OWNNETSETv6 = [ <DN42 IPv6 地址块, ",["$","span",{"class":"hljs-type"},["CIDR"]]," 格式>+ ];\n\nrouter id OWNIP;\n\nprotocol device {\n    scan ",["$","span",{"class":"hljs-type"},["time"]]," ",["$","span",{"class":"hljs-number"},["10"]],";\n}\n\n",["$","span",{"class":"hljs-keyword"},["function"]]," is_self_net() {\n    ",["$","span",{"class":"hljs-keyword"},["return"]]," net ~ OWNNETSET;\n}\n\n",["$","span",{"class":"hljs-keyword"},["function"]]," is_self_net_v6() {\n    ",["$","span",{"class":"hljs-keyword"},["return"]]," net ~ OWNNETSETv6;\n}\n\n",["$","span",{"class":"hljs-keyword"},["function"]]," is_valid_network() {\n    ",["$","span",{"class":"hljs-keyword"},["return"]]," net ~ [\n        ",["$","span",{"class":"hljs-number"},["172.20"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["14"]],"{",["$","span",{"class":"hljs-number"},["21"]],",",["$","span",{"class":"hljs-number"},["29"]],"}, # dn42\n        ",["$","span",{"class":"hljs-number"},["172.20"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["24"]],"{",["$","span",{"class":"hljs-number"},["28"]],",",["$","span",{"class":"hljs-number"},["32"]],"}, # dn42 Anycast\n        ",["$","span",{"class":"hljs-number"},["172.21"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["24"]],"{",["$","span",{"class":"hljs-number"},["28"]],",",["$","span",{"class":"hljs-number"},["32"]],"}, # dn42 Anycast\n        ",["$","span",{"class":"hljs-number"},["172.22"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["24"]],"{",["$","span",{"class":"hljs-number"},["28"]],",",["$","span",{"class":"hljs-number"},["32"]],"}, # dn42 Anycast\n        ",["$","span",{"class":"hljs-number"},["172.23"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["24"]],"{",["$","span",{"class":"hljs-number"},["28"]],",",["$","span",{"class":"hljs-number"},["32"]],"}, # dn42 Anycast\n        ",["$","span",{"class":"hljs-number"},["172.31"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["16"]],"+,       # ChaosVPN\n        ",["$","span",{"class":"hljs-number"},["10.100"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["14"]],"+,       # ChaosVPN\n        ",["$","span",{"class":"hljs-number"},["10.127"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["16"]],"{",["$","span",{"class":"hljs-number"},["16"]],",",["$","span",{"class":"hljs-number"},["32"]],"}, # neonetwork\n        ",["$","span",{"class":"hljs-number"},["10.0"]],["$","span",{"class":"hljs-number"},[".0"]],["$","span",{"class":"hljs-number"},[".0"]],"/",["$","span",{"class":"hljs-number"},["8"]],"{",["$","span",{"class":"hljs-number"},["15"]],",",["$","span",{"class":"hljs-number"},["24"]],"}     # Freifunk.net\n    ];\n}\n\nroa4 ",["$","span",{"class":"hljs-keyword"},["table"]]," dn42_roa;\nroa6 ",["$","span",{"class":"hljs-keyword"},["table"]]," dn42_roa_v6;\n\nprotocol static {\n    roa4 { ",["$","span",{"class":"hljs-keyword"},["table"]]," dn42_roa; };\n    ",["$","span",{"class":"hljs-keyword"},["include"]]," \"/etc/bird/roa_dn42.conf\";\n};\n\nprotocol static {\n    roa6 { ",["$","span",{"class":"hljs-keyword"},["table"]]," dn42_roa_v6; };\n    ",["$","span",{"class":"hljs-keyword"},["include"]]," \"/etc/bird/roa_dn42_v6.conf\";\n};\n\n",["$","span",{"class":"hljs-keyword"},["function"]]," is_valid_network_v6() {\n  ",["$","span",{"class":"hljs-keyword"},["return"]]," net ~ [\n    fd00::/",["$","span",{"class":"hljs-number"},["8"]],"{",["$","span",{"class":"hljs-number"},["44"]],",",["$","span",{"class":"hljs-number"},["64"]],"} # ULA address space ",["$","span",{"class":"hljs-keyword"},["as"]]," per RFC ",["$","span",{"class":"hljs-number"},["4193"]],"\n  ];\n}\n\nprotocol kernel {\n    scan ",["$","span",{"class":"hljs-type"},["time"]]," ",["$","span",{"class":"hljs-number"},["20"]],";\n\n    ipv6 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["none"]],";\n        export ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," source = RTS_STATIC ",["$","span",{"class":"hljs-keyword"},["then"]]," reject;\n            krt_prefsrc = OWNIPv6;\n            accept;\n        };\n    };\n};\n\nprotocol kernel {\n    scan ",["$","span",{"class":"hljs-type"},["time"]]," ",["$","span",{"class":"hljs-number"},["20"]],";\n\n    ipv4 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["none"]],";\n        export ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," source = RTS_STATIC ",["$","span",{"class":"hljs-keyword"},["then"]]," reject;\n            krt_prefsrc = OWNIP;\n            accept;\n        };\n    };\n}\n\nprotocol static {\n    route OWNNET reject;\n\n    ipv4 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["all"]],";\n        export ",["$","span",{"class":"hljs-keyword"},["none"]],";\n    };\n}\n\nprotocol static {\n    route OWNNETv6 reject;\n\n    ipv6 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["all"]],";\n        export ",["$","span",{"class":"hljs-keyword"},["none"]],";\n    };\n}\n\n",["$","span",{"class":"hljs-keyword"},["template"]]," bgp dnpeers {\n    ",["$","span",{"class":"hljs-keyword"},["local"]]," ",["$","span",{"class":"hljs-keyword"},["as"]]," OWNAS;\n    ",["$","span",{"class":"hljs-type"},["path"]]," metric ",["$","span",{"class":"hljs-number"},["1"]],";\n\n    ipv4 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," is_valid_network() && !is_self_net() ",["$","span",{"class":"hljs-keyword"},["then"]]," {\n                ",["$","span",{"class":"hljs-keyword"},["if"]]," (roa_check(dn42_roa, net, bgp_path.last) != ROA_VALID) ",["$","span",{"class":"hljs-keyword"},["then"]]," {\n                    print \"[dn42] ROA check failed for \", net, \" ASN \", bgp_path.last;\n                    reject;\n                }\n                accept;\n            }\n            reject;\n        };\n\n        export ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," is_valid_network() && source ~ [RTS_STATIC, RTS_BGP] ",["$","span",{"class":"hljs-keyword"},["then"]]," accept;\n            reject;\n        };\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["limit"]]," ",["$","span",{"class":"hljs-number"},["1000"]]," action block;\n    };\n\n    ipv6 {\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," is_valid_network_v6() && !is_self_net_v6() ",["$","span",{"class":"hljs-keyword"},["then"]]," {\n                ",["$","span",{"class":"hljs-keyword"},["if"]]," (roa_check(dn42_roa_v6, net, bgp_path.last) != ROA_VALID) ",["$","span",{"class":"hljs-keyword"},["then"]]," {\n                    print \"[dn42] ROA check failed for \", net, \" ASN \", bgp_path.last;\n                    reject;\n                }\n                accept;\n            }\n            reject;\n        };\n        export ",["$","span",{"class":"hljs-keyword"},["filter"]]," {\n            ",["$","span",{"class":"hljs-keyword"},["if"]]," is_valid_network_v6() && source ~ [RTS_STATIC, RTS_BGP] ",["$","span",{"class":"hljs-keyword"},["then"]]," accept;\n            reject;\n        };\n        ",["$","span",{"class":"hljs-keyword"},["import"]]," ",["$","span",{"class":"hljs-keyword"},["limit"]]," ",["$","span",{"class":"hljs-number"},["1000"]]," action block;\n    };\n}\n\n\n",["$","span",{"class":"hljs-keyword"},["include"]]," \"/etc/bird/peers/*\";"]]]],["$","p",{},["然后在 ",["$","code",{},["/etc/bird"]]," 目录下创建一个文件夹，命名为 ",["$","code",{},["peers"]]," ，以便后续存储配置文件使用。"]],["$","p",{},["如果想更深入的学习如何编写 BIRD 配置文件，推荐查看 ",["$","a",{"href":"https://github.com/moesoha/bird-bgp-kickstart","rel":"external nofollow noreferrer"},["BIRD 与 BGP 的新手开场"]]," 和 ",["$","a",{"href":"https://bird.network.cz/?get_doc&f=bird.html&v=20","rel":"external nofollow noreferrer"},["BIRD 官方文档"]]," 。"]],["$","h3",{"id":"下载-roa-配置文件"},["下载 ROA 配置文件"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["wget -4 -O /tmp/dn42_roa.conf https://dn42.burble.com/roa/dn42_roa_bird2_4.conf && ",["$","span",{"class":"hljs-built_in"},["mv"]]," -f /tmp/dn42_roa.conf /etc/bird/dn42_roa.conf\nwget -4 -O /tmp/dn42_roa_v6.conf https://dn42.burble.com/roa/dn42_roa_bird2_6.conf && ",["$","span",{"class":"hljs-built_in"},["mv"]]," -f /tmp/dn42_roa_v6.conf /etc/bird/dn42_roa_v6.conf"]]]],["$","p",{},["使用此命令即可将 ROA 文件下载到本机以供使用。"]],["$","p",{},["还需要将此命令添加为定时任务，推荐设置为每小时运行一次，否则不会更新到最新的 ROA ，每次更新后都需要使用 ",["$","code",{},["birdc configure"]]," 命令重载 BIRD 配置。"]],["$","h3",{"id":"重新加载-bird-配置"},["重新加载 BIRD 配置"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["birdc configure"]]]],["$","p",{},["使用该命令重新加载 BIRD 配置，并使用 ",["$","code",{},["birdc show protocol"]]," 查看状态。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/08/16/ZSPe6a3fpuDATG2.png","alt":"","loading":"lazy"},[]]]],["$","h2",{"id":"dn42-wireguard-使用入门"},["DN42 WireGuard 使用入门"]],["$","p",{},["WireGuard 是一种简单易用、速度快、现代化的 VPN ，它利用了最先进的加密技术，并使用 UDP 协议传输数据。WireGuard 设计为通用 VPN ，可在嵌入式设备和超级计算机上运行，​​ 适用于许多不同的环境。WireGuard 起初是专为 Linux 编写并发布的，后来被移植到各个平台上。在 ",["$","a",{"href":"http://WireGuard.com","rel":"external nofollow noreferrer"},["WireGuard.com"]]," 上可以找到它的 ",["$","a",{"href":"https://www.wireguard.com/papers/wireguard.pdf","rel":"external nofollow noreferrer"},["技术白皮书"]]," 。"]],["$","h3",{"id":"安装-wireguard"},["安装 WireGuard"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["apt update\napt install wireguard -y"]]]],["$","p",{},["一般情况下，执行此命令即可直接安装 WireGuard 和 WireGuard Tools ，无需额外操作。"]],["$","h3",{"id":"生成公钥与私钥"},["生成公钥与私钥"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["wg genkey | ",["$","span",{"class":"hljs-built_in"},["tee"]]," privatekey | wg pubkey > publickey"]]]],["$","p",{},["使用此命令即可在当前目录下生成两个名叫 ",["$","code",{},["privatekey"]]," 和 ",["$","code",{},["publickey"]]," 的文件，分别代表私钥和公钥。"]],["$","h3",{"id":"搭建-wireguard-隧道"},["搭建 WireGuard 隧道"]],["$","p",{},["搭建 WireGuard 隧道非常简便，只需要生成一对公钥与私钥并与对等端交换公钥即可。"]],["$","p",{},["如果需要通过 WireGuard 隧道建立 BGP 会话，不能使用 WireGuard 内建的多 Peer 功能，必须为每个对等端创建一条隧道。"]],["$","p",{},["在 ",["$","code",{},["/etc/wireguard"]]," 目录下新建一个名为 ",["$","code",{},["<隧道名>.conf"]]," 的文件："]],["$","pre",{},[["$","code",{"class":"hljs ini"},[["$","span",{"class":"hljs-section"},["[Interface]"]],"\n",["$","span",{"class":"hljs-attr"},["PrivateKey"]]," = <私钥>\n",["$","span",{"class":"hljs-attr"},["ListenPort"]]," = <监听端口>\n",["$","span",{"class":"hljs-attr"},["PostUp"]],"     = ip address add <链路本地地址>/",["$","span",{"class":"hljs-number"},["64"]]," dev %i\n",["$","span",{"class":"hljs-attr"},["PostUp"]],"     = ip addr add <本地 IPv6 地址>/",["$","span",{"class":"hljs-number"},["128"]]," peer <对端 IPv6 地址>/",["$","span",{"class":"hljs-number"},["128"]]," dev %i\n",["$","span",{"class":"hljs-attr"},["PostUp"]],"     = ip addr add <本地 IPv4 地址>/",["$","span",{"class":"hljs-number"},["32"]]," peer <对端 IPv4 地址>/",["$","span",{"class":"hljs-number"},["32"]]," dev %i\n",["$","span",{"class":"hljs-attr"},["Table"]],"      = ",["$","span",{"class":"hljs-literal"},["off"]]]]]],["$","ul",{},[["$","li",{},[["$","code",{},["PrivateKey"]]," ：私钥。"]],["$","li",{},[["$","code",{},["ListenPort"]]," ：监听端口。"]],["$","li",{},["第一个 ",["$","code",{},["PostUp"]]," ：（可选，推荐）添加链路本地地址。"]],["$","li",{},["第二个 ",["$","code",{},["PostUp"]]," ：（可选）添加本地和对等端的 DN42 IPv6 地址。"]],["$","li",{},["第三个 ",["$","code",{},["PostUp"]]," ：（可选）添加本地和对等端的 DN42 IPv4 地址。"]],["$","li",{},[["$","code",{},["Table"]]," ：必须设定为 ",["$","code",{},["off"]]," （不导入系统路由表），否则会导致系统断网。"]]]],["$","p",{},["当使用链路本地地址建立 BGP 会话时，可以不设置 DN42 IPv4 和 DN42 IPv6 地址，但是机器上必须有一张网卡上绑定了本机的 DN42 IPv4 和 DN42 IPv6 地址。同理，如果不使用链路本地地址建立 BGP 会话则无需添加链路本地地址。"]],["$","pre",{},[["$","code",{"class":"hljs ini"},[["$","span",{"class":"hljs-section"},["[Peer]"]],"\n",["$","span",{"class":"hljs-attr"},["PublicKey"]],"           = <对端公钥>\n",["$","span",{"class":"hljs-attr"},["PresharedKey"]],"        = <对端预共享密钥>\n",["$","span",{"class":"hljs-attr"},["Endpoint"]],"            = <对端 IP/域名 和 端口号>\n",["$","span",{"class":"hljs-attr"},["PersistentKeepalive"]]," = ",["$","span",{"class":"hljs-number"},["30"]],"\n",["$","span",{"class":"hljs-attr"},["AllowedIPs"]],"          = ",["$","span",{"class":"hljs-number"},["10.0"]],".",["$","span",{"class":"hljs-number"},["0.0"]],"/",["$","span",{"class":"hljs-number"},["8"]],", ",["$","span",{"class":"hljs-number"},["172.20"]],".",["$","span",{"class":"hljs-number"},["0.0"]],"/",["$","span",{"class":"hljs-number"},["14"]],", ",["$","span",{"class":"hljs-number"},["172.31"]],".",["$","span",{"class":"hljs-number"},["0.0"]],"/",["$","span",{"class":"hljs-number"},["16"]],", fd00::/",["$","span",{"class":"hljs-number"},["8"]],", fe80::/",["$","span",{"class":"hljs-number"},["64"]]]]]],["$","ul",{},[["$","li",{},[["$","code",{},["PublicKey"]]," ：对端公钥。"]],["$","li",{},[["$","code",{},["PresharedKey"]]," ：（可选）对端预共享密钥。"]],["$","li",{},[["$","code",{},["Endpoint"]]," ：（可选）对端的连接域名/IP 及端口号。",["$","br",{},[]],"如果对端没有公网 IP 地址，需要本地设置为被动模式则无需填写此项。"]],["$","li",{},[["$","code",{},["PersistentKeepalive"]]," ：（可选）每隔多少秒发送一次握手信息防止连接被中断并更新对端 IP 。",["$","br",{},[]],"如果本地没有公网 IP 地址，必须配置此项。"]],["$","li",{},[["$","code",{},["AllowedIPs"]]," ：允许使用 WireGuard 转发流量的 IP 地址段。"]]]],["$","p",{},["之后使用 ",["$","code",{},["wg-quick up <隧道名>"]]," 来启动隧道即可。"]],["$","p",{},["如需开机自启，可以在测试无误后执行 ",["$","code",{},["systemctl enable wg-quick@<隧道名>"]]," 。"]],["$","h3",{"id":"检测隧道状态"},["检测隧道状态"]],["$","pre",{},[["$","code",{"class":"hljs bash"},["wg show <隧道名>"]]]],["$","p",{},["使用该命令即可查看隧道状态。"]],["$","p",{},[["$","img",{"src":"https://s1.baoshuo.ren/2021/08/16/wxgUJNHnQAXFMdS.png","alt":"","loading":"lazy"},[]]]],["$","p",{},["如上图所示，当 ",["$","code",{},["latest handshake"]]," 时间较近且 ",["$","code",{},["transfer"]]," 有收有发时可以认为隧道正常。"]],["$","p",{},["如需查看所有隧道的状态，直接使用 ",["$","code",{},["wg"]]," 命令即可。"]],["$","h2",{"id":"与其他网络进行对等互联"},["与其他网络进行对等互联"]],["$","h3",{"id":"系统配置"},["系统配置"]],["$","p",{},["在 DN42 网络中，没有绝对意义上的客户端，每个人都可能是他人的路由器，经常会出现数据包的来源网卡与回复使用的网卡不一致的情况，因此需要打开 Linux 内核的数据包转发功能，具体操作如下："]],["$","pre",{},[["$","code",{"class":"hljs bash"},[["$","span",{"class":"hljs-built_in"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"net.ipv4.ip_forward=1\""]]," >> /etc/sysctl.conf\n",["$","span",{"class":"hljs-built_in"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"net.ipv6.conf.default.forwarding=1\""]]," >> /etc/sysctl.conf\n",["$","span",{"class":"hljs-built_in"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"net.ipv6.conf.all.forwarding=1\""]]," >> /etc/sysctl.conf\nsysctl -p"]]]],["$","p",{},["同时，也需要关闭 Linux 内核的 ",["$","code",{},["rp_filter"]]," 的严格模式，具体操作如下："]],["$","pre",{},[["$","code",{"class":"hljs bash"},[["$","span",{"class":"hljs-built_in"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"net.ipv4.conf.default.rp_filter=0\""]]," >> /etc/sysctl.conf\n",["$","span",{"class":"hljs-built_in"},["echo"]]," ",["$","span",{"class":"hljs-string"},["\"net.ipv4.conf.all.rp_filter=0\""]]," >> /etc/sysctl.conf\nsysctl -p"]]]],["$","p",{},["除此之外，还需要关闭一些自动化的配置 iptables 防火墙的工具，如 UFW 。"]],["$","h3",{"id":"搭建-wireguard-隧道-2"},["搭建 WireGuard 隧道"]],["$","p",{},["请参考 ",["$","a",{"href":"#DN42-WireGuard-%E4%BD%BF%E7%94%A8%E5%85%A5%E9%97%A8"},["DN42 WireGuard 使用入门"]]," 一节。"]],["$","h3",{"id":"配置-bgp-会话"},["配置 BGP 会话"]],["$","p",{},["在 ",["$","code",{},["/etc/bird/peers"]]," 目录下新建一个文件，命名为 ",["$","code",{},["<名字>.conf"]]," 。"]],["$","p",{},["如果使用链路本地地址进行 Peer 的话，需要按照下面的配置示例进行配置："]],["$","pre",{},[["$","code",{"class":"hljs bird"},["protocol bgp <名字> from dnpeers {\n    neighbor <对端链路本地地址> % '<对端 WireGuard 隧道名>' as <对端 ASN>;\n    source address <本地的链路本地地址>;\n}"]]]],["$","p",{},["否则按照下面的配置示例进行配置："]],["$","pre",{},[["$","code",{"class":"hljs bird"},["protocol bgp <名字> from dnpeers {\n    neighbor <对端 IPv6 地址> as <对端 ASN>;\n}"]]]],["$","p",{},["然后使用 ",["$","code",{},["birdc configure"]]," 重载配置即可。"]],["$","h2",{"id":"更新日志"},["更新日志"]],["$","ul",{},[["$","li",{},["2021-04-04 第一版 ",["$","sup",{},["（2021 年 8 月 10 日存档于 ",["$","a",{"href":"https://web.archive.org/web/20210810062825/https://blog.baoshuo.ren/post/dn42-network/","rel":"external nofollow noreferrer"},["互联网档案馆"]],"）"]]]],["$","li",{},["2021-08-14 第二版"]]]],["$","h2",{"id":"参考资料"},["参考资料"]],["$","ol",{},[["$","li",{},[["$","a",{"href":"https://dn42.dev/howto/Getting-Started","rel":"external nofollow noreferrer"},["Getting Started - DN42 Wiki"]]]],["$","li",{},[["$","a",{"href":"https://git.dn42.dev/dn42/registry/src/branch/master/README.md","rel":"external nofollow noreferrer"},["Guide for creating a Pull Request - dn42/registry - DN42 Git"]]]],["$","li",{},[["$","a",{"href":"https://lantian.pub/article/modify-website/dn42-experimental-network-2020.lantian/","rel":"external nofollow noreferrer"},["DN42 实验网络介绍及注册教程（2020-10-01 更新） - Lan Tian @ Blog"]]]],["$","li",{},[["$","a",{"href":"https://datatracker.ietf.org/","rel":"external nofollow noreferrer"},["IETF Datatracker"]]]],["$","li",{},[["$","a",{"href":"https://en.wikipedia.org/wiki/Unique_local_address","rel":"external nofollow noreferrer"},["Unique local address - Wikipedia"]]]],["$","li",{},[["$","a",{"href":"https://github.com/moesoha/bird-bgp-kickstart","rel":"external nofollow noreferrer"},["BIRD 与 BGP 的新手开场 - Soha Jin - GitHub"]]]]]]],"thumb":"https://s1.baoshuo.ren/2021/04/03/R6IHLundNjpKxCD.png","date":"2021-04-04","updated":"2021-08-18","isoDate":"2021-04-04T03:29:32.000Z","isoUpdate":"2021-08-18T08:27:30.000Z","categories":[{"name":"技术向","url":"/categories/%E6%8A%80%E6%9C%AF%E5%90%91/"}],"tags":[{"name":"BGP","url":"/tags/BGP/"},{"name":"DN42","url":"/tags/DN42/"}],"license":null,"permalink":"https://blog.baoshuo.ren/post/dn42-network/","url":"/post/dn42-network/","prev":{"title":"搭建 BIRD Looking Glass 速成指北","url":"/post/bird-looking-glass/"},"next":{"title":"年轻人的第一个 ASN","url":"/post/my-own-asn/"},"toc":{"0":{"0":{"text":"注册前的准备","id":"注册前的准备"},"1":{"text":"克隆 DN42 注册表 Git 仓库","id":"克隆-dn42-注册表-git-仓库"},"2":{"text":"注册维护者","id":"注册维护者"},"3":{"text":"注册联系人","id":"注册联系人"},"4":{"text":"注册 ASN","id":"注册-asn"},"5":{"text":"注册 IPv4 地址块","id":"注册-ipv4-地址块"},"6":{"text":"注册 IPv6 地址块","id":"注册-ipv6-地址块"},"7":{"text":"添加路由记录","id":"添加路由记录"},"8":{"text":"上传更改到 DN42 注册表","id":"上传更改到-dn42-注册表"},"9":{"text":"注意事项","id":"注意事项"},"text":"注册 DN42","id":"注册-dn42"},"1":{"0":{"text":"安装 BIRD2","id":"安装-bird2"},"1":{"text":"编写 BIRD 配置文件","id":"编写-bird-配置文件"},"2":{"text":"下载 ROA 配置文件","id":"下载-roa-配置文件"},"3":{"text":"重新加载 BIRD 配置","id":"重新加载-bird-配置"},"text":"DN42 BIRD2 使用入门","id":"dn42-bird2-使用入门"},"2":{"0":{"text":"安装 WireGuard","id":"安装-wireguard"},"1":{"text":"生成公钥与私钥","id":"生成公钥与私钥"},"2":{"text":"搭建 WireGuard 隧道","id":"搭建-wireguard-隧道"},"3":{"text":"检测隧道状态","id":"检测隧道状态"},"text":"DN42 WireGuard 使用入门","id":"dn42-wireguard-使用入门"},"3":{"0":{"text":"系统配置","id":"系统配置"},"1":{"text":"搭建 WireGuard 隧道","id":"搭建-wireguard-隧道-2"},"2":{"text":"配置 BGP 会话","id":"配置-bgp-会话"},"text":"与其他网络进行对等互联","id":"与其他网络进行对等互联"},"4":{"text":"更新日志","id":"更新日志"},"5":{"text":"参考资料","id":"参考资料"}},"hasToc":true,"comments":true,"wordCount":"约 5.2 千字"}},"__N_SSG":true}