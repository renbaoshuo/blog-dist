{"pageProps":{"title":"USTC Hackergame 2021 Write Up - 宝硕博客","post":{"title":"USTC Hackergame 2021 Write Up","date":"2021-10-30T12:00:00.000Z","updated":"2021-10-30T12:00:00.000Z","type":"post","excerpt":"","thumb":null,"tags":["CTF","Hackergame"],"categories":["技术向"],"content":"<h2 id=签到><a class=anchor href=#签到 target=_blank></a>签到</h2>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/6HiDz8gjEVMQsph.png alt=\"\"></p>\n<p>点击 <code>Next</code> 键，发现页面的 URL 后多了个 <code>?page=1</code> ，结合第一个页面中的 <code>1970-01-01</code> 字样，可以判断出来 <code>page</code> 参数应为比赛期间的 Unix 时间戳。</p>\n<p>示例：<a href=\"http://202.38.93.111:10000/?page=1635002186\" target=_blank>http://202.38.93.111:10000/?page=1635002186</a></p>\n<h2 id=进制十六——参上><a class=anchor href=#进制十六——参上 target=_blank></a>进制十六——参上</h2>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/swZPQblAxcqCtEz.png alt=\"\"></p>\n<p>可以照着 16 进制数据搞一搞，然后 flag 就出来了：</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/poz4TdtU8nVPg75.png alt=\"\"></p>\n<h2 id=去吧！追寻自由的电波><a class=anchor href=#去吧！追寻自由的电波 target=_blank></a>去吧！追寻自由的电波</h2>\n<p>下载音频之后使用 Adobe Audition 进行变速即可。</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/GyoM3w185UhPxbz.png alt=\"\"></p>\n<h2 id=旅行照片><a class=anchor href=#旅行照片 target=_blank></a>旅行照片</h2>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/lHJ6SwxrW8mQf53.png alt=\"\"></p>\n<p>从图片中可以看出拍摄者在 14 层，并且楼下有一个蓝色的肯德基，那么使用 Google 搜索关键词 <code>海洋 蓝色 KFC</code> 可以得到以下结果：</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/FzxEHLfX5ylKkiN.png alt=\"\"></p>\n<p>从照片的描述中可以得到这家肯德基位于秦皇岛新澳海底世界。</p>\n<p>在百度地图上可以找到这家肯德基的电话、详细位置。同时按照卫星图可以推断出拍摄者所在的方向，进而推断出拍摄的大致时间。</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/crgFKpCOaoq8WzN.png alt=\"\"></p>\n<p>flag 获取成功。</p>\n<h2 id=flag-助力大红包><a class=anchor href=#flag-助力大红包 target=_blank></a>FLAG 助力大红包</h2>\n<p>查看点击助力按钮后的浏览器请求可以发现请求时有一个名为 IP 的参数，尝试修改这个参数发现会报错提示前后端检测 IP 不一致，那么考虑添加 <code>X-Forwarded-For</code> 头伪造经过代理的来源 IP 地址即可。</p>\n<p>比赛平台的速率限制为每秒最多请求一次，所以在每次请求后还需要等待 1 秒。</p>\n<pre><code class=\"hljs language-bash\"><span class=hljs-keyword>for</span> ((i=0; <span class=hljs-variable>$i</span> &lt;= 255; i = (<span class=hljs-variable>$i</span> + 1))); <span class=hljs-keyword>do</span>\n    curl <span class=hljs-string>&quot;http://202.38.93.111:10888/invite/<span class=hljs-variable>$invite_id</span>&quot;</span> -H <span class=hljs-string>&quot;X-Forwarded-For: <span class=hljs-variable>$i</span>.11.45.14&quot;</span> -d <span class=hljs-string>&quot;ip=<span class=hljs-variable>$i</span>.11.45.14&quot;</span>\n    <span class=hljs-built_in>sleep</span> 1\n<span class=hljs-keyword>done</span>\n</code></pre>\n<h2 id=猫咪问答-pro-max><a class=anchor href=#猫咪问答-pro-max target=_blank></a>猫咪问答 Pro Max</h2>\n<ol>\n<li>2017 年，中科大信息安全俱乐部（SEC@USTC）并入中科大 Linux 用户协会（USTCLUG）。目前，信息安全俱乐部的域名（<a href=http://sec.ustc.edu.cn target=_blank>sec.ustc.edu.cn</a>）已经无法访问，但你能找到信息安全俱乐部的社团章程在哪一天的会员代表大会上通过的吗？</li>\n</ol>\n<p>Wayback Machine 是个好东西啊。（<a href=https://web.archive.org/web/20170515053637/http://sec.ustc.edu.cn/doku.php/codes target=_blank>页面存档</a>）</p>\n<ol start=2>\n<li>中国科学技术大学 Linux 用户协会在近五年多少次被评为校五星级社团？</li>\n</ol>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/32Oq1tW86oke7rI.png alt=\"\"></p>\n<p>LUG 官网上直接搜就出来了。但实际上的答案应该是 5 ，可能是官网没更新最新信息。</p>\n<ol start=3>\n<li>中国科学技术大学 Linux 用户协会位于西区图书馆的活动室门口的牌子上“LUG @ USTC”下方的小字是？</li>\n</ol>\n<blockquote>\n<p>谷歌是你的好朋友。\n<cite>Hackergame 2020 「猫咪问答++」 flag 。</cite></p>\n</blockquote>\n<p><img src=https://s1.baoshuo.ren/2021/10/24/MCq9mGNQFUDoHy1.png alt=\"\"></p>\n<p>可以看到正确答案为 <code>Development Team of Library</code> 。</p>\n<ol start=4>\n<li>在 SIGBOVIK 2021 的一篇关于二进制 Newcomb-Benford 定律的论文中，作者一共展示了多少个数据集对其理论结果进行验证？</li>\n</ol>\n<p>可以在 <a href=http://sigbovik.org/2021/proceedings.pdf target=_blank>the record of the proceedings of SIGBOVIK 2021</a>（<a href=https://web.archive.org/web/20210626111527/http://www.sigbovik.org/2021/proceedings.pdf target=_blank>页面存档</a>）的 212 页找到这篇论文。</p>\n<ol start=5>\n<li>不严格遵循协议规范的操作着实令人生厌，好在 IETF 于 2021 年成立了 Protocol Police 以监督并惩戒所有违背 RFC 文档的行为个体。假如你发现了某位同学可能违反了协议规范，根据 Protocol Police 相关文档中规定的举报方法，你应该将你的举报信发往何处？</li>\n</ol>\n<p>搜索关键词：<a href=\"https://www.google.com/search?q=IETF+Protocol+Police\" target=_blank>IETF Protocol Police</a></p>\n<p>可以搜到这个「搞笑 RFC」：<a href=https://datatracker.ietf.org/doc/html/rfc8962#section-6 target=_blank>Establishing the Protocol Police</a> ，在第 6 节中有相关介绍。</p>\n<p>正确答案应为 <code>/dev/null</code> 。</p>\n<h2 id=卖瓜><a class=anchor href=#卖瓜 target=_blank></a>卖瓜</h2>\n<p>最开始拿到题我先想的是能不能用负数凑，结果发现不行，于是考虑溢出。</p>\n<p>试了试发现使用 6 斤瓜无法触发溢出，而使用 9 斤瓜的就可以触发溢出了。</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/27/HGwsJeqB63SZrNA.png alt=\"\"></p>\n<p>写了个脚本跑一跑，试出来了几个负数，挨个试了下发现放 2e18 个 9 斤瓜可以凑到 20 斤。</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/27/APRwaqf6SO3DTyH.png alt=\"\"></p>\n<p>然后在计算器里算了一下，只需要加 6 斤的瓜和 9 斤的瓜各 29782938247303441 个就能让称的显示变成 -1 。</p>\n<p>接下来放 2 个 6 斤瓜和 1 个 9 斤瓜就能拿到 flag 了。</p>\n<h2 id=透明的文件><a class=anchor href=#透明的文件 target=_blank></a>透明的文件</h2>\n<p>本题与 <a href=https://en.wikipedia.org/wiki/ANSI_escape_code target=_blank>ANSI Escape Code</a> 有关。</p>\n<p>首先需要将文件中的 <code>[</code> 替换成 <code>\\033[</code> ，然后再找一个支持显示 ANSI 控制码的终端输出。</p>\n<p>然后发现一片空白，啥也没有。</p>\n<p>捣鼓到快怀疑人生才发现终端上的某些字符被遮挡了，进而想到这个脚本可能清除了终端上某些地方的字符来显示 flag 。</p>\n<p>先编写一个复读函数用来填满终端：</p>\n<pre><code class=\"hljs language-bash\"><span class=hljs-function><span class=hljs-title>repeat</span></span>() {\n    <span class=hljs-keyword>for</span> ((i = 1; <span class=hljs-variable>$i</span> &lt;= <span class=hljs-variable>$1</span>; i = (<span class=hljs-variable>$i</span> + 1))); <span class=hljs-keyword>do</span>\n        <span class=hljs-built_in>echo</span> -n <span class=hljs-string>&quot;▉&quot;</span>\n    <span class=hljs-keyword>done</span>\n}\n</code></pre>\n<p><img src=https://s1.baoshuo.ren/2021/10/29/mniZ4Qch5rHCxWI.png alt=\"\"></p>\n<p>再配合上方替换好的文件输出即可，效果如图。</p>\n<h2 id=amnesia><a class=anchor href=#amnesia target=_blank></a>Amnesia</h2>\n<h3 id=轻度失忆><a class=anchor href=#轻度失忆 target=_blank></a>轻度失忆</h3>\n<p>使用 <code>putchar()</code> 函数即可解决此问题。</p>\n<pre><code class=\"hljs language-cpp\"><span class=hljs-meta>#<span class=hljs-keyword>include</span> <span class=hljs-string>&lt;stdio.h&gt;</span></span>\n\n<span class=hljs-function><span class=hljs-type>int</span> <span class=hljs-title>main</span><span class=hljs-params>()</span> </span>{\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;H&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;e&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;l&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;l&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;o&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;,&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27; &#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;w&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;o&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;r&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;l&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;d&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;!&#x27;</span>);\n    <span class=hljs-built_in>putchar</span>(<span class=hljs-string>&#x27;\\n&#x27;</span>);\n    <span class=hljs-keyword>return</span> <span class=hljs-number>0</span>;\n}\n</code></pre>\n<h2 id=图之上的信息><a class=anchor href=#图之上的信息 target=_blank></a>图之上的信息</h2>\n<p>可以使用 <code>__schema</code> 字段查询所有存在的类型：</p>\n<pre><code class=\"hljs language-graphql\">{\n  __schema {\n    types {\n      name\n    }\n  }\n}\n</code></pre>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/OpGkfi3FyAbugwT.png alt=\"\"></p>\n<p>发现一个名为 <code>GUser</code> 的类型，再构造一个语句查询类型结构：</p>\n<pre><code class=\"hljs language-graphql\">{\n  __type(name: &quot;GUser&quot;) {\n    name\n    fields {\n      name\n      type {\n        name\n        kind\n        ofType {\n          name\n          kind\n        }\n      }\n    }\n  }\n}\n</code></pre>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/XzhIAwocnVMx6Lk.png alt=\"\"></p>\n<p>顺便获取了下 <code>GNote</code> 类型的结构：</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/9mtWaPAFoYfDLXu.png alt=\"\"></p>\n<p>进行查询即可得到 flag ：</p>\n<p><img src=https://s1.baoshuo.ren/2021/10/25/wKs5BpteaYbAcoP.png alt=\"\"></p>\n<h2 id=后记><a class=anchor href=#后记 target=_blank></a>后记</h2>\n<p>今年拿的名次比去年的高，感觉在这一年里自己的 web 水平有很大的提升，但 math 还是一如既往地爆了零，和我的数学中考成绩一样的烂。</p>\n<p>以后如果有时间的话逆向、汇编什么的也都要学一学，不然的话每次一看见 binary 就有点不知所措、无从下手属实不太好。</p>\n<p>推荐阅读：{% post_link ustc-hackergame-2020-write-up %}</p>\n","katex":false,"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%BE%E5%88%B0\"><span class=\"toc-text\">签到</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9B%E5%88%B6%E5%8D%81%E5%85%AD%E2%80%94%E2%80%94%E5%8F%82%E4%B8%8A\"><span class=\"toc-text\">进制十六——参上</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%BB%E5%90%A7%EF%BC%81%E8%BF%BD%E5%AF%BB%E8%87%AA%E7%94%B1%E7%9A%84%E7%94%B5%E6%B3%A2\"><span class=\"toc-text\">去吧！追寻自由的电波</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%97%85%E8%A1%8C%E7%85%A7%E7%89%87\"><span class=\"toc-text\">旅行照片</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#flag-%E5%8A%A9%E5%8A%9B%E5%A4%A7%E7%BA%A2%E5%8C%85\"><span class=\"toc-text\">FLAG 助力大红包</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%8C%AB%E5%92%AA%E9%97%AE%E7%AD%94-pro-max\"><span class=\"toc-text\">猫咪问答 Pro Max</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8D%96%E7%93%9C\"><span class=\"toc-text\">卖瓜</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%8F%E6%98%8E%E7%9A%84%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">透明的文件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#amnesia\"><span class=\"toc-text\">Amnesia</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BD%BB%E5%BA%A6%E5%A4%B1%E5%BF%86\"><span class=\"toc-text\">轻度失忆</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9B%BE%E4%B9%8B%E4%B8%8A%E7%9A%84%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">图之上的信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%90%8E%E8%AE%B0\"><span class=\"toc-text\">后记</span></a></li></ol>","comment":true,"path":"/post/ustc-hackergame-2021-write-up/","url":"https://blog.baoshuo.ren/post/ustc-hackergame-2021-write-up/"},"__post":true},"__N_SSG":true}