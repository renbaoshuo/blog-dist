{"pageProps":{"title":"【补档】Handsome 魔改教程：左侧边栏输出优化 - 宝硕博客","post":{"title":"【补档】Handsome 魔改教程：左侧边栏输出优化","excerpt":"感觉 handsome 自带的左侧边栏显示方法不太合适，于是自己参照了 UCW 大佬的教程 优化侧栏显示：实现更加美观的分类展示 改了一下。","content":"<p>感觉 handsome 自带的左侧边栏显示方法不太合适，于是自己参照了 UCW 大佬的教程 <a href=https://ucw.moe/archives/handsome-aside-category.html>优化侧栏显示：实现更加美观的分类展示</a> 改了一下。</p><span id=more></span><h2 id=修改方法>修改方法</h2><h3 id=前置操作>前置操作</h3><p>建议引入 <a href=https://fontawesome.dashgame.com/ >Font Awesome</a> 图标库，在 <code>主题后台设置 -&gt; 开发者设置 -&gt; 自定义输出 head 头部的 HTML 代码</code> 里面添加下面的代码即可。</p><pre><code class=\"hljs html\"><span class=hljs-tag>&lt;<span class=hljs-name>link</span></span>\n<span class=hljs-tag>  <span class=hljs-attr>href</span>=<span class=hljs-string>&quot;https://cdn.bootcss.com/font-awesome/4.7.0/css/font-awesome.min.css&quot;</span></span>\n<span class=hljs-tag>  <span class=hljs-attr>rel</span>=<span class=hljs-string>&quot;stylesheet&quot;</span></span>\n<span class=hljs-tag>/&gt;</span></code></pre><p>上面的 <code>Font Awesome</code> 的 css 文件来自 BootCDN 提供，你也可以替换成自己的文件。</p><h3 id=改代码>改代码</h3><p>首先，打开 <code>libs/Content.php</code> ，在蓝线所示的位置：</p><p><img src=https://s1.baoshuo.ren/2020/11/26/3J7jpP5W6uqkAwO.png alt=\"\" loading=lazy></p><p>插入下面的代码：</p><pre><code class=\"hljs php\"><span class=hljs-comment>/**</span>\n<span class=hljs-comment> *</span>\n<span class=hljs-comment> * <span class=hljs-doctag>@param</span> $categories</span>\n<span class=hljs-comment> * <span class=hljs-doctag>@return</span> string</span>\n<span class=hljs-comment> */</span>\n<span class=hljs-keyword>public</span> <span class=hljs-built_in>static</span> <span class=hljs-function><span class=hljs-keyword>function</span> <span class=hljs-title>returnAsideCategories</span>(<span class=hljs-params><span class=hljs-variable>$categories</span></span>)</span>&#123;\n    <span class=hljs-variable>$html</span>    = <span class=hljs-string>&quot;&quot;</span>;\n    <span class=hljs-variable>$options</span> = <span class=\"hljs-title function_ invoke__\">mget</span>();\n    <span class=hljs-variable>$icons</span>   = <span class=hljs-keyword>array</span>(\n        <span class=hljs-string>&#x27;default&#x27;</span> =&gt; <span class=hljs-string>&#x27;glyphicon glyphicon-tasks&#x27;</span>,\n        <span class=hljs-string>&#x27;github&#x27;</span>  =&gt; <span class=hljs-string>&#x27;fa fa-github&#x27;</span>\n        <span class=hljs-comment>/**</span>\n<span class=hljs-comment>         *  格式：  &#x27;分类缩略名&#x27; =&gt; &#x27;图标名称&#x27;,</span>\n<span class=hljs-comment>         */</span>\n    );\n    <span class=hljs-keyword>while</span>(<span class=hljs-variable>$categories</span>-&gt;<span class=\"hljs-title function_ invoke__\">next</span>()) &#123;\n        <span class=hljs-keyword>if</span> (<span class=hljs-variable>$categories</span>-&gt;levels === <span class=hljs-number>0</span>) &#123;\n            <span class=hljs-variable>$children</span> = <span class=hljs-variable>$categories</span>-&gt;<span class=\"hljs-title function_ invoke__\">getAllChildren</span>(<span class=hljs-variable>$categories</span>-&gt;mid);\n            <span class=hljs-keyword>if</span> (!<span class=hljs-keyword>empty</span>(<span class=hljs-variable>$children</span>)) &#123;\n                <span class=hljs-variable>$html</span> .= <span class=hljs-string>&#x27;&lt;li&gt;&lt;a class=&quot;auto&quot;&gt;&lt;span class=&quot;pull-right text-muted&quot;&gt;&lt;i class=&quot;fontello icon-fw fontello-angle-right text&quot;&gt;&lt;/i&gt;&lt;i class=&quot;fontello icon-fw fontello-angle-down text-active&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span class=&quot;nav-icon&quot;&gt;&lt;i class=&quot;&#x27;</span> . <span class=hljs-variable>$icons</span>[<span class=hljs-variable>$categories</span>-&gt;slug] . <span class=hljs-string>&#x27;&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span&gt;&#x27;</span> . <span class=hljs-variable>$categories</span>-&gt;name . <span class=hljs-string>&#x27;&lt;/span&gt;&lt;/a&gt;&#x27;</span>;\n                <span class=hljs-variable>$childCategoryHtml</span> =  <span class=hljs-string>&#x27;&lt;ul class=&quot;nav nav-sub dk&quot;&gt;&lt;li class=&quot;nav-sub-header&quot;&gt;&lt;a&gt;&lt;span&gt;&#x27;</span> . <span class=hljs-variable>$categories</span>-&gt;name . <span class=hljs-string>&#x27;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#x27;</span>;\n                <span class=hljs-keyword>foreach</span>(<span class=hljs-variable>$children</span> <span class=hljs-keyword>as</span> <span class=hljs-variable>$mid</span>)&#123;\n                    <span class=hljs-variable>$child</span> = <span class=hljs-variable>$categories</span>-&gt;<span class=\"hljs-title function_ invoke__\">getCategory</span>(<span class=hljs-variable>$mid</span>);\n                    <span class=hljs-variable>$childCategoryHtml</span> .= <span class=hljs-string>&#x27;&lt;li&gt;&lt;a href=&quot;&#x27;</span> . <span class=hljs-variable>$child</span>[<span class=hljs-string>&#x27;permalink&#x27;</span>] . <span class=hljs-string>&#x27;&quot;&gt;&lt;b class=&quot;badge pull-right&quot;&gt;&#x27;</span> . <span class=hljs-variable>$child</span>[<span class=hljs-string>&#x27;count&#x27;</span>] . <span class=hljs-string>&#x27;&lt;/b&gt;&lt;i class=&quot;&#x27;</span> . <span class=hljs-variable>$icons</span>[<span class=hljs-variable>$child</span>[<span class=hljs-string>&#x27;slug&#x27;</span>]] . <span class=hljs-string>&#x27;&quot;&gt;&lt;/i&gt;&lt;span&gt;&#x27;</span> . <span class=hljs-variable>$child</span>[<span class=hljs-string>&#x27;name&#x27;</span>] . <span class=hljs-string>&#x27;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#x27;</span>;\n                &#125;\n                <span class=hljs-variable>$childCategoryHtml</span> .= <span class=hljs-string>&#x27;&lt;/ul&gt;&#x27;</span>;\n                <span class=hljs-variable>$html</span> .= <span class=hljs-variable>$childCategoryHtml</span>;\n                <span class=hljs-variable>$html</span> .= <span class=hljs-string>&quot;&lt;/li&gt;&quot;</span>;\n            &#125; <span class=hljs-keyword>else</span> &#123;\n                <span class=hljs-variable>$html</span> .= <span class=hljs-string>&#x27;&lt;li&gt;&lt;a href=&quot;&#x27;</span> . <span class=hljs-variable>$categories</span>-&gt;permalink . <span class=hljs-string>&#x27;&quot; class=&quot;auto&quot;&gt;&lt;b class=&quot;badge pull-right&quot;&gt;&#x27;</span> . <span class=hljs-variable>$categories</span>-&gt;count . <span class=hljs-string>&#x27;&lt;/b&gt;&lt;span class=&quot;nav-icon&quot;&gt;&lt;i class=&quot;&#x27;</span>.<span class=hljs-variable>$icons</span>[<span class=hljs-variable>$categories</span>-&gt;slug].<span class=hljs-string>&#x27;&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;span&gt;&#x27;</span> . <span class=hljs-variable>$categories</span>-&gt;name . <span class=hljs-string>&#x27;&lt;/span&gt;&lt;/a&gt;&lt;/li&gt;&#x27;</span>;\n            &#125;\n        &#125;\n    &#125;\n    <span class=hljs-keyword>return</span> <span class=hljs-variable>$html</span>;\n&#125;</code></pre><p>在 <code>component/aside.php</code> 中找到以下代码（大约 <code>131 ~ 160</code> 行），删除。</p><pre><code class=\"hljs php\">              &lt;!--分类category--&gt;\n                <span class=hljs-meta>&lt;?php</span>\n                <span class=hljs-variable>$class</span> = <span class=hljs-string>&quot;&quot;</span>;\n                    <span class=hljs-keyword>if</span> (<span class=\"hljs-title function_ invoke__\">in_array</span>(<span class=hljs-string>&quot;openCategory&quot;</span>,<span class=\"hljs-variable language_\">$this</span>-&gt;options-&gt;featuresetup))&#123;\n                        <span class=hljs-variable>$class</span> = <span class=hljs-string>&quot;class=\\\\&quot;</span>active\\\\<span class=hljs-string>&quot;&quot;</span>;\n                    &#125;\n                    <span class=hljs-meta>?&gt;</span>\n              &lt;li <span class=hljs-meta>&lt;?php</span> <span class=hljs-keyword>echo</span> <span class=hljs-variable>$class</span>; <span class=hljs-meta>?&gt;</span>&gt;\n                &lt;a <span class=hljs-class><span class=hljs-keyword>class</span>=&quot;<span class=hljs-title>auto</span>&quot;&gt;</span>\n<span class=hljs-class>                  &lt;<span class=hljs-title>span</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>pull</span>-<span class=hljs-title>right</span> <span class=hljs-title>text</span>-<span class=hljs-title>muted</span>&quot;&gt;</span>\n<span class=hljs-class>                    &lt;<span class=hljs-title>i</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>fontello</span> <span class=hljs-title>icon</span>-<span class=hljs-title>fw</span> <span class=hljs-title>fontello</span>-<span class=hljs-title>angle</span>-<span class=hljs-title>right</span> <span class=hljs-title>text</span>&quot;&gt;&lt;/<span class=hljs-title>i</span>&gt;</span>\n<span class=hljs-class>                    &lt;<span class=hljs-title>i</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>fontello</span> <span class=hljs-title>icon</span>-<span class=hljs-title>fw</span> <span class=hljs-title>fontello</span>-<span class=hljs-title>angle</span>-<span class=hljs-title>down</span> <span class=hljs-title>text</span>-<span class=hljs-title>active</span>&quot;&gt;&lt;/<span class=hljs-title>i</span>&gt;</span>\n<span class=hljs-class>                  &lt;/<span class=hljs-title>span</span>&gt;</span>\n<span class=hljs-class>&lt;!--                  &lt;<span class=hljs-title>i</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>glyphicon</span> <span class=hljs-title>glyphicon</span>-<span class=hljs-title>th</span>&quot;&gt;&lt;/<span class=hljs-title>i</span>&gt;--&gt;</span>\n<span class=hljs-class>                    &lt;<span class=hljs-title>span</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>nav</span>-<span class=hljs-title>icon</span>&quot;&gt;&lt;<span class=hljs-title>i</span> <span class=hljs-title>data</span>-<span class=hljs-title>feather</span>=&quot;<span class=hljs-title>grid</span>&quot;&gt;&lt;/<span class=hljs-title>i</span>&gt;&lt;/<span class=hljs-title>span</span>&gt;</span>\n<span class=hljs-class></span>\n<span class=hljs-class>                    &lt;<span class=hljs-title>span</span>&gt;&lt;?<span class=hljs-title>php</span> <span class=hljs-title>_me</span>(&quot;分类&quot;) ?&gt;&lt;/<span class=hljs-title>span</span>&gt;</span>\n<span class=hljs-class>                &lt;/<span class=hljs-title>a</span>&gt;</span>\n<span class=hljs-class>                &lt;<span class=hljs-title>ul</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>nav</span> <span class=hljs-title>nav</span>-<span class=hljs-title>sub</span> <span class=hljs-title>dk</span>&quot;&gt;</span>\n<span class=hljs-class>                  &lt;<span class=hljs-title>li</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>nav</span>-<span class=hljs-title>sub</span>-<span class=hljs-title>header</span>&quot;&gt;</span>\n<span class=hljs-class>                    &lt;<span class=hljs-title>a</span>&gt;</span>\n<span class=hljs-class>                      &lt;<span class=hljs-title>span</span>&gt;&lt;?<span class=hljs-title>php</span> <span class=hljs-title>_me</span>(&quot;分类&quot;) ?&gt;&lt;/<span class=hljs-title>span</span>&gt;</span>\n<span class=hljs-class>                    &lt;/<span class=hljs-title>a</span>&gt;</span>\n<span class=hljs-class>                  &lt;/<span class=hljs-title>li</span>&gt;</span>\n<span class=hljs-class>                  &lt;!--循环输出分类--&gt;</span>\n<span class=hljs-class>                    &lt;?<span class=hljs-title>php</span></span>\n<span class=hljs-class>                    $<span class=hljs-title>this</span>-&gt;<span class=hljs-title>widget</span>(&#x27;<span class=hljs-title>Widget_Metas_Category_List</span>&#x27;)-&gt;<span class=hljs-title>to</span>($<span class=hljs-title>categorys</span>);</span>\n<span class=hljs-class>                    <span class=hljs-title>echo</span> <span class=hljs-title>Content</span>::<span class=hljs-title>returnCategories</span>($<span class=hljs-title>categorys</span>) ?&gt;</span>\n<span class=hljs-class>                &lt;/<span class=hljs-title>ul</span>&gt;</span>\n<span class=hljs-class>              &lt;/<span class=hljs-title>li</span>&gt;</span></code></pre><p>然后在下图蓝线所示的位置（ <code>127</code> 行左右 ）</p><p><img src=https://s1.baoshuo.ren/2020/11/26/H1s2CGy9NtWrgdh.png alt=\"\" loading=lazy></p><p>插入以下代码：</p><pre><code class=\"hljs php\">     &lt;!--start--&gt;\n  &lt;li <span class=hljs-class><span class=hljs-keyword>class</span>=&quot;<span class=hljs-title>line</span> <span class=hljs-title>dk</span>&quot;&gt;&lt;/<span class=hljs-title>li</span>&gt;</span>\n<span class=hljs-class></span>\n<span class=hljs-class>&lt;!--<span class=hljs-title>Components</span>--&gt;</span>\n<span class=hljs-class>  &lt;<span class=hljs-title>li</span> <span class=hljs-title>class</span>=&quot;<span class=hljs-title>hidden</span>-<span class=hljs-title>folded</span> <span class=hljs-title>padder</span> <span class=hljs-title>m</span>-<span class=hljs-title>t</span> <span class=hljs-title>m</span>-<span class=hljs-title>b</span>-<span class=hljs-title>sm</span> <span class=hljs-title>text</span>-<span class=hljs-title>muted</span> <span class=hljs-title>text</span>-<span class=hljs-title>xs</span>&quot;&gt;</span>\n<span class=hljs-class>    &lt;<span class=hljs-title>span</span>&gt;&lt;?<span class=hljs-title>php</span> <span class=hljs-title>_me</span>(&quot;分类&quot;) ?&gt;&lt;/<span class=hljs-title>span</span>&gt;</span>\n<span class=hljs-class>  &lt;/<span class=hljs-title>li</span>&gt;</span>\n<span class=hljs-class>  &lt;!--分类<span class=hljs-title>category</span>--&gt;</span>\n<span class=hljs-class>  &lt;!--循环输出分类--&gt;</span>\n<span class=hljs-class>  &lt;?<span class=hljs-title>php</span></span>\n<span class=hljs-class>  $<span class=hljs-title>this</span>-&gt;<span class=hljs-title>widget</span>(&#x27;<span class=hljs-title>Widget_Metas_Category_List</span>&#x27;)-&gt;<span class=hljs-title>to</span>($<span class=hljs-title>categorys</span>);</span>\n<span class=hljs-class>  <span class=hljs-title>echo</span> <span class=hljs-title>Content</span>::<span class=hljs-title>returnAsideCategories</span>($<span class=hljs-title>categorys</span>) ?&gt;</span>\n<span class=hljs-class>  &lt;!--<span class=hljs-title>end</span>--&gt;</span></code></pre><p>然后，刷新你的博客，是不是就有效果了呢？</p><h2 id=图标设置>图标设置</h2><p>设置方法：在 <code>$icons</code> 的 array 数组中插入 <code>'分类缩略名' =&gt; '图标'</code> 即可。</p><h3 id=font-awesome>Font Awesome</h3><p>如果你引入了 <code>Font Awesome</code> 的图标的话，可以到 <a href=https://fontawesome.dashgame.com/ >https://fontawesome.dashgame.com/</a> 选择你喜欢的图标使用。</p><h4 id=使用方法>使用方法</h4><p>在 <a href=https://fontawesome.dashgame.com/ >https://fontawesome.dashgame.com/</a> 挑一个图标，在图标的名字前加入 <code>fa fa-</code> 即可。</p><h4 id=使用样例>使用样例</h4><p>使用 <code>archive</code> 图标时：</p><p><img src=https://s1.baoshuo.ren/2020/11/26/POyaCjgLveKJMDE.png alt=\"\" loading=lazy></p><p>对应在 <code>$icons</code> 的 array 数组中插入的代码：</p><pre><code class=\"hljs php\"><span class=hljs-string>&#x27;archives&#x27;</span> =&gt; <span class=hljs-string>&#x27;fa fa-archive&#x27;</span></code></pre><h3 id=fontello>Fontello</h3><p>handsome 主题自带部分 <code>fontello</code> 图标，具体列表可在 <a href=https://auth.ihewro.com/user/docs/#/icons>handsome 主题文档</a> 查看。</p><h4 id=使用方法-2>使用方法</h4><p>在图标的名字前加入 <code>fontello fontello-</code> 即可。</p><h4 id=使用样例-2>使用样例</h4><p>与 <code>Font Awesome</code> 相似，在此不多赘述。</p><h3 id=feather>Feather</h3><p>handsome 主题自带 <code>feather</code> 的所有图标，在此处使用需要一些变通措施。</p><h4 id=使用方法-3>使用方法</h4><p>在 <a href=https://feathericons.com/ >https://feathericons.com/</a> 选取好你需要的图标。</p><p>然后在名称前插入 <code>&quot; data-feather=&quot;</code> ，再输入名称即可。</p><h4 id=使用样例-3>使用样例</h4><p>以 <code>airplay</code> 为例：</p><p><img src=https://s1.baoshuo.ren/2020/11/26/ObX7A1yuHoUj9fk.png alt=\"\" loading=lazy></p><p>输入 <code>'airplay' =&gt; '&quot; data-feather=&quot;airplay'</code> 即可。</p><h3 id=其他-svg-格式的图标>其他 SVG 格式的图标</h3><h3 id=使用方法-4>使用方法</h3><p>在 svg 的开头加入 <code>&quot;&gt;&lt;/i&gt;</code> ，在结尾加入 <code>&lt;i</code> 即可。</p><h3 id=使用样例-4>使用样例</h3><p>下载下来的 <code>svg</code> 文件内容：</p><p><img src=https://s1.baoshuo.ren/2020/11/26/ukVefHwLng2PWhb.png alt=\"\" loading=lazy></p><p>将其复制，然后在 <code>$icons</code> 的 array 数组中插入的代码：</p><pre><code class=\"hljs php\"><span class=hljs-string>&#x27;airplay&#x27;</span> =&gt; <span class=hljs-string>&#x27;&quot;&gt;&lt;/i&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; width=&quot;16&quot; height=&quot;16&quot; viewBox=&quot;0 0 24 24&quot; fill=&quot;none&quot; stroke=&quot;currentColor&quot; stroke-width=&quot;2&quot; stroke-linecap=&quot;round&quot; stroke-linejoin=&quot;round&quot; class=&quot;feather feather-airplay&quot;&gt;&lt;path d=&quot;M5 17H4a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h16a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2h-1&quot;/&gt;&lt;polygon points=&quot;12 15 17 21 7 21 12 15&quot;/&gt;&lt;/svg&gt;&lt;i &#x27;</span></code></pre><h2 id=后记-2>后记</h2><h3 id=报错解决>报错解决</h3><p>报错 <code>syntax error, unexpected 'xxx' (T_CONSTANT_ENCAPSED_STRING), expecting ')'</code> 咋办？</p><p>检查你设置图标时的语法是否正确，正确语法如下：</p><pre><code class=\"hljs php\"><span class=hljs-variable>$icons</span> = <span class=hljs-keyword>array</span>(\n    <span class=hljs-string>&#x27;aaaaaaa&#x27;</span>  =&gt; <span class=hljs-string>&#x27;glyphicon glyphicon-xx&#x27;</span>,\n    <span class=hljs-string>&#x27;bbbb&#x27;</span>     =&gt; <span class=hljs-string>&#x27;glyphicon glyphicon-xxxxxx&#x27;</span>,\n    <span class=hljs-string>&#x27;cccccc&#x27;</span>   =&gt; <span class=hljs-string>&#x27;fa fa-xxxxx&#x27;</span>,\n    <span class=hljs-string>&#x27;dddddddd&#x27;</span> =&gt; <span class=hljs-string>&#x27;fa fa-xxxx&#x27;</span>,\n    <span class=hljs-string>&#x27;eeeee&#x27;</span>    =&gt; <span class=hljs-string>&#x27;glyphicon glyphicon-xxxx&#x27;</span>,\n    <span class=hljs-string>&#x27;fff&#x27;</span>      =&gt; <span class=hljs-string>&#x27;fa fa-xxxxx&#x27;</span>\n)</code></pre><blockquote><p><strong>注意</strong></p><p><code>array</code> 函数的参数中除了最后一行，每一行末尾都有一个 <code>,</code></p></blockquote>","thumb":null,"date":"2020-04-12","updated":"2020-04-12","isoDate":"2020-04-12T15:31:25.000Z","isoUpdate":"2020-04-12T15:31:25.000Z","categories":[{"name":"笔记本","url":"/categories/%E7%AC%94%E8%AE%B0%E6%9C%AC/"}],"tags":[{"name":"Typecho","url":"/tags/Typecho/"}],"license":null,"permalink":"https://blog.baoshuo.ren/post/handsome-leftbar-layout/","url":"/post/handsome-leftbar-layout/","prev":{"title":"修改 Git 配置加速 Clone GitHub 源码","url":"/post/clone-github-repo-faster/"},"next":{"title":"Hello World","url":"/post/hello-world/"},"toc":{"1":{"1":{"text":"前置操作","id":"前置操作"},"2":{"text":"改代码","id":"改代码"},"text":"修改方法","id":"修改方法"},"2":{"1":{"1":{"text":"使用方法","id":"使用方法"},"2":{"text":"使用样例","id":"使用样例"},"text":"Font Awesome","id":"font-awesome"},"2":{"1":{"text":"使用方法","id":"使用方法-2"},"2":{"text":"使用样例","id":"使用样例-2"},"text":"Fontello","id":"fontello"},"3":{"1":{"text":"使用方法","id":"使用方法-3"},"2":{"text":"使用样例","id":"使用样例-3"},"text":"Feather","id":"feather"},"4":{"text":"其他 SVG 格式的图标","id":"其他-svg-格式的图标"},"5":{"text":"使用方法","id":"使用方法-4"},"6":{"text":"使用样例","id":"使用样例-4"},"text":"图标设置","id":"图标设置"},"3":{"text":"后记","id":"后记-2"}},"hasToc":true,"comments":true,"wordCount":"约 1.5 千字"},"__post":true},"__N_SSG":true}