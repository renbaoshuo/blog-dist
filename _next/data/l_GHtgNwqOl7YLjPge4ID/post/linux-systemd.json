{"pageProps":{"title":"Linux Systemd 入门 - 宝硕博客","post":{"title":"Linux Systemd 入门","excerpt":"Systemd 是 Linux 电脑操作系统之下的一套中央化系统及设置管理程序，包括有守护进程、程序库以及应用软件，由 Lennart Poettering 带头开发。其开发目标是提供更优秀的框架以表示系统服务间的依赖关系，并依此实现系统初始化时服务的并行启动，同时达到降低 Shell 的系统开销的效果，最终代替现在常用的 System V 与 BSD 风格 init 程序。","content":[{"tag":"p","content":["Systemd 是 Linux 电脑操作系统之下的一套中央化系统及设置管理程序，包括有守护进程、程序库以及应用软件，由 Lennart Poettering 带头开发。其开发目标是提供更优秀的框架以表示系统服务间的依赖关系，并依此实现系统初始化时服务的并行启动，同时达到降低 Shell 的系统开销的效果，最终代替现在常用的 System V 与 BSD 风格 init 程序。"]},"\n",{"tag":"span","attrs":{"id":"more"},"content":[""]},"\n",{"tag":"p","content":["目前绝大多数的 Linux 发行版都已采用 systemd 代替原来的 System V。"]},"\n",{"tag":"h2","attrs":{"id":"常用命令列表"},"content":["常用命令列表"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":["列出所有已加载的单元：",{"tag":"code","content":["systemctl list-units"]}]},"\n",{"tag":"li","content":["查看指定的单元的配置：",{"tag":"code","content":["systemctl cat [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl cat sshd.service"]},")"]}]},"\n",{"tag":"li","content":["修改指定单元的配置：",{"tag":"code","content":["systemctl edit [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl edit sshd.service"]},")"]}]},"\n",{"tag":"li","content":["查看指定的单元的运行状态： ",{"tag":"code","content":["systemctl status [serviceName|pid]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl status sshd.service"]},")"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":["如果指定了单元名称，那么显示指定单元的运行时状态信息，以及这些单元最近的日志数据。"]},"\n",{"tag":"li","content":["如果指定了 PID ，那么显示指定 PID 所属单元的运行时状态信息，以及这些单元最近的日志数据。"]},"\n",{"tag":"li","content":["如果未指定任何单元或 PID ，那么显示整个系统的状态信息， 此时若与 ",{"tag":"code","content":["--all"]}," 连用，则同时显示所有已加载的单元（可以用 ",{"tag":"code","content":["-t"]}," 限定单元类型）的状态信息。"]},"\n"]},"\n"]},"\n",{"tag":"li","content":["启动指定的单元：",{"tag":"code","content":["systemctl start [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl start sshd.service"]},")"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":["被指定的单元必须是已经被加载的。"]},"\n"]},"\n"]},"\n",{"tag":"li","content":["重新启动指定的单元：",{"tag":"code","content":["systemctl restart [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl restart sshd.service"]},")"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":["如果指定的单元没有启动，则直接启动它们。"]},"\n"]},"\n"]},"\n",{"tag":"li","content":["停止指定的单元：",{"tag":"code","content":["systemctl stop [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl stop sshd.service"]},")"]}]},"\n",{"tag":"li","content":["启用指定的单元：",{"tag":"code","content":["systemctl enable [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl enable sshd.service"]},")"]}]},"\n",{"tag":"li","content":["停用指定的单元：",{"tag":"code","content":["systemctl disable [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl disable sshd.service"]},")"]}]},"\n",{"tag":"li","content":["重新加载指定的单元的配置：",{"tag":"code","content":["systemctl reload [serviceName]"]}," ",{"tag":"em","content":["(e.g. ",{"tag":"code","content":["systemctl reload sshd.service"]},")"]}]},"\n",{"tag":"li","content":["重新加载所有已修改过的配置文件：",{"tag":"code","content":["systemctl daemon-reload"]}]},"\n"]},"\n",{"tag":"h2","attrs":{"id":"开机启动"},"content":["开机启动"]},"\n",{"tag":"p","content":["对于那些支持 Systemd 的软件，安装的时候，会自动在 ",{"tag":"code","content":["/usr/lib/systemd/system"]}," 目录添加一个配置文件。"]},"\n",{"tag":"p","content":["如果你想让该软件开机启动，就执行下面的命令（以 ",{"tag":"code","content":["sshd.service"]}," 为例）。"]},"\n",{"tag":"pre","content":[{"tag":"code","attrs":{"class":"hljs bash"},"content":["sudo systemctl ",{"tag":"span","attrs":{"class":"hljs-built_in"},"content":["enable"]}," sshd.service"]}]},"\n",{"tag":"p","content":["上面的命令相当于在 ",{"tag":"code","content":["/etc/systemd/system"]}," 目录添加一个符号链接，指向 ",{"tag":"code","content":["/usr/lib/systemd/system"]}," 里面的 ",{"tag":"code","content":["sshd.service"]}," 文件。"]},"\n",{"tag":"p","content":["这是因为开机时，Systemd 只执行 ",{"tag":"code","content":["/etc/systemd/system"]}," 目录里面的配置文件。这也意味着，如果把修改后的配置文件放在该目录，就可以达到覆盖原始配置的效果。"]},"\n",{"tag":"h2","attrs":{"id":"unit"},"content":["Unit"]},"\n",{"tag":"h3","attrs":{"id":"配置文件"},"content":["配置文件"]},"\n",{"tag":"p","content":["对于那些没有原生支持 Systemd 的软件，可以自行编写配置文件来达到开机自启的目的。"]},"\n",{"tag":"blockquote","content":["\n",{"tag":"p","content":["我曾经为 Sakura Frp 编写过一个脚本：",{"tag":"a","attrs":{"href":"https://getfrp.sh","rel":"external nofollow noreferrer"},"content":["getfrp.sh"]}," ",{"tag":"sup","content":["（",{"tag":"a","attrs":{"href":"https://gist.github.com/renbaoshuo/9c351b3e5750a2f6d453d035e0fd071a#file-getfrp-sh-L200-L213","rel":"external nofollow noreferrer"},"content":["存档"]}," 于 GitHub Gist）"]}," ，里面便是使用了自行编写配置文件的方法。"]},"\n"]},"\n",{"tag":"p","content":["以 ",{"tag":"code","content":["sshd.service"]}," 这个配置文件为例子，来分析一下 Systemd 的配置文件："]},"\n",{"tag":"pre","content":[{"tag":"code","attrs":{"class":"hljs ini"},"content":[{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# /lib/systemd/system/ssh.service"]},"\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Unit]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Description"]},"=OpenBSD Secure Shell server\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Documentation"]},"=man:sshd(",{"tag":"span","attrs":{"class":"hljs-number"},"content":["8"]},") man:sshd_config(",{"tag":"span","attrs":{"class":"hljs-number"},"content":["5"]},")\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["After"]},"=network.target auditd.service\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ConditionPathExists"]},"=!/etc/ssh/sshd_not_to_be_run\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Service]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["EnvironmentFile"]},"=-/etc/default/ssh\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ExecStartPre"]},"=/usr/sbin/sshd -t\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ExecStart"]},"=/usr/sbin/sshd -D ",{"tag":"span","attrs":{"class":"hljs-variable"},"content":["$SSHD_OPTS"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ExecReload"]},"=/usr/sbin/sshd -t\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ExecReload"]},"=/bin/kill -HUP ",{"tag":"span","attrs":{"class":"hljs-variable"},"content":["$MAINPID"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["KillMode"]},"=process\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Restart"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["on"]},"-failure\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["RestartPreventExitStatus"]},"=",{"tag":"span","attrs":{"class":"hljs-number"},"content":["255"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Type"]},"=notify\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["RuntimeDirectory"]},"=sshd\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["RuntimeDirectoryMode"]},"=",{"tag":"span","attrs":{"class":"hljs-number"},"content":["0755"]},"\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Install]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["WantedBy"]},"=multi-user.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Alias"]},"=sshd.service"]}]},"\n",{"tag":"p","content":["可以看出这个文件一共有三个部分：",{"tag":"code","content":["[Unit]"]},", ",{"tag":"code","content":["[Service]"]}," 和 ",{"tag":"code","content":["[Install]"]}," 。"]},"\n",{"tag":"p","content":["配置项通常是可以重复的，但靠后的配置项会取代前面同名的配置项。",{"tag":"br","content":[""]},"\n因此，如果你想要将某项的设定值归零，可以在该配置所在部分的结尾添加一个空值项（如 ",{"tag":"code","content":["After="]},"），就将该设定归零了。"]},"\n",{"tag":"h4","attrs":{"id":"unit-启动顺序与依赖关系"},"content":["[Unit]: 启动顺序与依赖关系"]},"\n",{"tag":"p","content":["这个部分主要有以下几个配置项："]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["Description"]},": 当前服务的简易说明"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Documentation"]},": 文档位置（以空格分隔）\n",{"tag":"ul","content":["\n",{"tag":"li","content":["该项可以是网页链接，也可以是 manpages 的名称，亦或是文件路径。"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Before"]},": 在哪些服务之前启动\n",{"tag":"ul","content":["\n",{"tag":"li","content":["本字段不涉及依赖关系，只是说明了启动顺序"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["After"]},": 在哪些服务之后启动\n",{"tag":"ul","content":["\n",{"tag":"li","content":["本字段不涉及依赖关系，只是说明了启动顺序"]},"\n",{"tag":"li","content":["以 ",{"tag":"code","content":["sshd.service"]}," 中的配置为例，该服务需要在 ",{"tag":"code","content":["network.target"]}," 和 ",{"tag":"code","content":["auditd.service"]}," 之后启动"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Wants"]},": 弱依赖的服务\n",{"tag":"ul","content":["\n",{"tag":"li","content":["若被依赖的服务被停止，这个服务不需要停止"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Requires"]},": 强依赖的服务\n",{"tag":"ul","content":["\n",{"tag":"li","content":["若被依赖的服务没有启动，则不能启动这个服务"]},"\n",{"tag":"li","content":["若被依赖的服务被停止，则这个服务也必须停止"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Conflicts"]},": 冲突的服务\n",{"tag":"ul","content":["\n",{"tag":"li","content":["如果列出的服务中有一个已经运行，那么就不能启动这个服务"]},"\n"]},"\n"]},"\n"]},"\n",{"tag":"h4","attrs":{"id":"service-启动行为"},"content":["[Service]: 启动行为"]},"\n",{"tag":"p","content":["这个部分主要有以下几个配置项："]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["Type"]},": 启动类型。默认值为 ",{"tag":"code","content":["simple"]}," ，可选值如下：\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["simple"]},": 使 ",{"tag":"code","content":["ExecStart"]}," 项启动的项成为主进程"]},"\n",{"tag":"li","content":[{"tag":"code","content":["forking"]},": ",{"tag":"code","content":["ExecStart"]}," 项将会以 ",{"tag":"code","content":["fork()"]}," 的形式启动，此时父进程将会退出，子进程将成为主进程"]},"\n",{"tag":"li","content":[{"tag":"code","content":["oneshot"]},": 类似于 ",{"tag":"code","content":["simple"]}," ，但只执行一次，Systemd 会等它执行完，才启动其他服务"]},"\n",{"tag":"li","content":[{"tag":"code","content":["dbus"]},": 类似于 ",{"tag":"code","content":["simple"]}," ，但会等待 ",{"tag":"code","content":["D-Bus"]}," 信号后启动"]},"\n",{"tag":"li","content":[{"tag":"code","content":["notify"]},": 类似于 ",{"tag":"code","content":["simple"]}," ，启动结束后会发出通知信号，然后 Systemd 再启动其他服务"]},"\n",{"tag":"li","content":[{"tag":"code","content":["idle"]},": 类似于 ",{"tag":"code","content":["simple"]}," ，但是要等到其他任务都执行完，才会启动该服务。\n",{"tag":"ul","content":["\n",{"tag":"li","content":["这个选项的其中一种使用场合是为让该服务的输出，不与其他服务的输出相混合"]},"\n",{"tag":"li","content":["这个选项的另外一种使用场合是执行只需要再开机的时候执行一次的程序"]},"\n"]},"\n"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Environment"]},": 指定环境变量"]},"\n",{"tag":"li","content":[{"tag":"code","content":["EnvironmentFile"]},": 环境变量配置文件，该文件内部的 ",{"tag":"code","content":["key=value"]}," 形式的配置可以在当前文件中以 ",{"tag":"code","content":["$key"]}," 获取"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecStart"]},": 服务启动时执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecReload"]},": 服务重启时执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecStop"]},": 服务停止时执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecStartPre"]},": 服务启动之前执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecStartPost"]},": 服务启动之后执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["ExecStopPost"]},": 服务停止之后执行的命令"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Restart"]},": 服务退出后的重启方式，默认值为 ",{"tag":"code","content":["no"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["no"]},": 进程退出后不会重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["on-success"]},": 当进程正常退出时（退出状态码为 0）重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["on-failure"]},": 当进程非正常退出时（退出状态码不为 0、被信号终止、程序超时）重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["on-abnormal"]},": 当进程被信号终止或程序超时时重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["on-abort"]},": 当收到没有捕捉到的信号终止时重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["on-watchdog"]},": 当进程超时退出时重启"]},"\n",{"tag":"li","content":[{"tag":"code","content":["always"]},": 总是重启（不论原因）"]},"\n",{"tag":"li","content":["对于守护进程，推荐设为 ",{"tag":"code","content":["on-failure"]},"。对于那些允许发生错误退出的服务，可以设为 ",{"tag":"code","content":["on-abnormal"]},"。"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["RemainAfterExit"]},": 退出后是否重新启动\n",{"tag":"ul","content":["\n",{"tag":"li","content":["当设定为 ",{"tag":"code","content":["RemainAfterExit=1"]}," 时，则当这个服务所属的所有程序都终止之后，此服务会再尝试启动。这对于 ",{"tag":"code","content":["Type=oneshot"]}," 的服务很有帮助"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["TimeoutSec"]},": 当这个服务在启动或停止时失败进入&quot;强制结束&quot;状态的等待秒数。"]},"\n",{"tag":"li","content":[{"tag":"code","content":["KillMode"]},": 定义 Systemd 如何停止这个服务，默认值为 ",{"tag":"code","content":["control-group"]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["control-group"]},": 服务停止时关闭此控制组中所有的进程"]},"\n",{"tag":"li","content":[{"tag":"code","content":["process"]},": 服务停止时只终止主进程（ExecStart 接的后面那串指令）"]},"\n",{"tag":"li","content":[{"tag":"code","content":["mixed"]},": 主进程将收到 ",{"tag":"strong","content":["SIGTERM"]}," 信号，子进程收到 ",{"tag":"strong","content":["SIGKILL"]}," 信号"]},"\n",{"tag":"li","content":[{"tag":"code","content":["none"]},": 没有进程会被杀掉，只是执行服务的 stop 命令"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["RestartSec"]},": 表示 Systemd 重启服务之前，需要等待的秒数（默认是 100ms）"]},"\n"]},"\n",{"tag":"p","content":["所有的启动设置之前，都可以加上一个连词号 (",{"tag":"code","content":["-"]},") ，表示 「抑制错误」 ，即发生错误的时候，不影响其他命令的执行。以 ",{"tag":"code","content":["sshd.service"]}," 为例，文件中的 ",{"tag":"code","content":["EnvironmentFile=-/etc/sysconfig/sshd"]},"（注意等号后面的那个连词号），表示 ",{"tag":"code","content":["/etc/sysconfig/sshd"]}," 文件不存在，也不会抛出错误。"]},"\n",{"tag":"h4","attrs":{"id":"install-安装行为"},"content":["[Install]: 安装行为"]},"\n",{"tag":"p","content":["这个部分主要有以下几个配置项："]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["WantedBy"]},": 表示该服务所在的 Target\n",{"tag":"ul","content":["\n",{"tag":"li","content":["一般来说，服务性质的单元都是挂在 ",{"tag":"code","content":["multi-user.target"]}," 下的"]},"\n"]},"\n"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Also"]},": 当该服务被启用时需要同时启用的单元"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Alias"]},": 指定创建软链接时链接至本单元配置文件的别名文件"]},"\n"]},"\n",{"tag":"h3","attrs":{"id":"模板实例"},"content":["模板实例"]},"\n",{"tag":"p","content":["此处以 ",{"tag":"code","content":["getty@.service"]}," 文件为例，来分析一下它是如何做到使用一个配置文件启动多个服务的："]},"\n",{"tag":"pre","content":[{"tag":"code","attrs":{"class":"hljs ini"},"content":[{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# /lib/systemd/system/getty@.service"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  SPDX-License-Identifier: LGPL-2.1+"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  This file is part of systemd."]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  systemd is free software; you can redistribute it and/or modify it"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  under the terms of the GNU Lesser General Public License as published by"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  the Free Software Foundation; either version 2.1 of the License, or"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  (at your option) any later version."]},"\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Unit]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Description"]},"=Getty ",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["on"]}," %I\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Documentation"]},"=man:agetty(",{"tag":"span","attrs":{"class":"hljs-number"},"content":["8"]},") man:systemd-getty-generator(",{"tag":"span","attrs":{"class":"hljs-number"},"content":["8"]},")\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Documentation"]},"=http://",{"tag":"span","attrs":{"class":"hljs-number"},"content":["0"]},"pointer.de/blog/projects/serial-console.html\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["After"]},"=systemd-user-sessions.service plymouth-quit-wait.service getty-pre.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["After"]},"=rc-local.service\n\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# If additional gettys are spawned during boot then we should make"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# sure that this is synchronized before getty.target, even though"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# getty.target didn&#x27;t actually pull it in."]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Before"]},"=getty.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["IgnoreOnIsolate"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]},"\n\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# IgnoreOnIsolate causes issues with sulogin, if someone isolates"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# rescue.target or starts rescue.service from multi-user.target or"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# graphical.target."]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Conflicts"]},"=rescue.service\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Before"]},"=rescue.service\n\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# On systems without virtual consoles, don&#x27;t start any getty. Note"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# that serial gettys are covered by serial-getty@.service, not this"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# unit."]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ConditionPathExists"]},"=/dev/tty0\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Service]"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# the VT is cleared by TTYVTDisallocate"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# The &#x27;-o&#x27; option value tells agetty to replace &#x27;login&#x27; arguments with an"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# option to preserve environment (-p), followed by &#x27;--&#x27; for safety, and then"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# the entered username."]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["ExecStart"]},"=-/sbin/agetty -o ",{"tag":"span","attrs":{"class":"hljs-string"},"content":["&#x27;-p -- \\\\u&#x27;"]}," --noclear %I ",{"tag":"span","attrs":{"class":"hljs-variable"},"content":["$TERM"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Type"]},"=idle\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Restart"]},"=always\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["RestartSec"]},"=",{"tag":"span","attrs":{"class":"hljs-number"},"content":["0"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["UtmpIdentifier"]},"=%I\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["TTYPath"]},"=/dev/%I\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["TTYReset"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["TTYVHangup"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["TTYVTDisallocate"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["KillMode"]},"=process\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["IgnoreSIGPIPE"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["no"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["SendSIGHUP"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]},"\n\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# Unset locale for the console getty since the console has problems"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# displaying some internationalized messages."]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["UnsetEnvironment"]},"=LANG LANGUAGE LC_CTYPE LC_NUMERIC LC_TIME LC_COLLATE LC_MONETARY LC_MESSAGES LC_PAPER LC_NAME LC_ADDRESS LC_TELEPHONE LC_MEASUREMENT LC_IDENTIFICATION\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Install]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["WantedBy"]},"=getty.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["DefaultInstance"]},"=tty1"]}]},"\n",{"tag":"p","content":["运行 ",{"tag":"code","content":["systemctl status getty@tty1.service"]}," 命令，可以看到如下图所示的输出："]},"\n",{"tag":"p","content":[{"tag":"img","attrs":{"src":"https://s1.baoshuo.ren/2021/02/11/lhw1BzOUb7TRDrq.png","alt":"","loading":"lazy"},"content":[""]}]},"\n",{"tag":"p","content":["不难发现图中标橙色的字符与上方配置文件中的 ",{"tag":"code","content":["%I"]}," 相对应，并且配置文件的名称也不是 ",{"tag":"code","content":["getty@tty1.service"]}," ，而是 ",{"tag":"code","content":["getty@.service"]}," ，这种配置文件叫做 「模板实例」 。"]},"\n",{"tag":"p","content":["启动时只需要在 ",{"tag":"code","content":["@"]}," 后面添加需要填入 ",{"tag":"code","content":["%I"]}," 位置的参数即可，如 ",{"tag":"code","content":["getty@tty9.service"]}," 。"]},"\n",{"tag":"h2","attrs":{"id":"target"},"content":["Target"]},"\n",{"tag":"p","content":["一般来说，常用的 Target 有两个：一个是 ",{"tag":"code","content":["multi-user.target"]}," ，表示多用户命令行状态；另一个是 ",{"tag":"code","content":["graphical.target"]}," ，表示图形用户状态（它依赖于 ",{"tag":"code","content":["multi-user.target"]},"），这一点和 SysVinit 的运行级别很是相似。"]},"\n",{"tag":"p","content":["官方提供了一张非常清晰的 Target 依赖关系图："]},"\n",{"tag":"p","content":[{"tag":"img","attrs":{"src":"https://s1.baoshuo.ren/2021/02/11/ubmqlLdiGeCtUg7.png","alt":"","loading":"lazy"},"content":[""]}]},"\n",{"tag":"p","content":["图源：",{"tag":"a","attrs":{"href":"https://www.freedesktop.org/software/systemd/man/bootup.html#System%20Manager%20Bootup","rel":"external nofollow noreferrer"},"content":["https://www.freedesktop.org/software/systemd/man/bootup.html#System Manager Bootup"]}]},"\n",{"tag":"h3","attrs":{"id":"配置文件-2"},"content":["配置文件"]},"\n",{"tag":"p","content":["以 ",{"tag":"code","content":["multi-user.target"]}," 这个文件为例子，来简要说明一下 Target 的配置文件中的主要项目："]},"\n",{"tag":"pre","content":[{"tag":"code","attrs":{"class":"hljs ini"},"content":[{"tag":"span","attrs":{"class":"hljs-comment"},"content":["# /lib/systemd/system/multi-user.target"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  SPDX-License-Identifier: LGPL-2.1+"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  This file is part of systemd."]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  systemd is free software; you can redistribute it and/or modify it"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  under the terms of the GNU Lesser General Public License as published by"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  the Free Software Foundation; either version 2.1 of the License, or"]},"\n",{"tag":"span","attrs":{"class":"hljs-comment"},"content":["#  (at your option) any later version."]},"\n\n",{"tag":"span","attrs":{"class":"hljs-section"},"content":["[Unit]"]},"\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Description"]},"=Multi-User System\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Documentation"]},"=man:systemd.special(",{"tag":"span","attrs":{"class":"hljs-number"},"content":["7"]},")\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Requires"]},"=basic.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["Conflicts"]},"=rescue.service rescue.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["After"]},"=basic.target rescue.service rescue.target\n",{"tag":"span","attrs":{"class":"hljs-attr"},"content":["AllowIsolate"]},"=",{"tag":"span","attrs":{"class":"hljs-literal"},"content":["yes"]}]}]},"\n",{"tag":"ul","content":["\n",{"tag":"li","content":[{"tag":"code","content":["Requires"]},": 要求于某个 Target 一起运行"]},"\n",{"tag":"li","content":[{"tag":"code","content":["Conflicts"]},": 冲突的 Target"]},"\n",{"tag":"li","content":[{"tag":"code","content":["After"]},": 在哪些 Target 之后启动"]},"\n",{"tag":"li","content":[{"tag":"code","content":["AllowIsolate"]},": 是否允许使用 ",{"tag":"code","content":["systemctl isolate"]}," 命令切换到这个 Target"]},"\n"]},"\n",{"tag":"h2","attrs":{"id":"参考资料-6"},"content":["参考资料"]},"\n",{"tag":"ol","content":["\n",{"tag":"li","content":[{"tag":"a","attrs":{"href":"https://en.wikipedia.org/wiki/Systemd","rel":"external nofollow noreferrer"},"content":["Systemd - Wikipedia"]}," ",{"tag":"sup","content":["（",{"tag":"a","attrs":{"href":"https://web.archive.org/web/20210210150200/https://en.wikipedia.org/wiki/Systemd","rel":"external nofollow noreferrer"},"content":["存档"]}," 于 ",{"tag":"a","attrs":{"href":"https://archive.org","rel":"external nofollow noreferrer"},"content":["互联网档案馆"]},"）"]}]},"\n",{"tag":"li","content":[{"tag":"a","attrs":{"href":"https://manpages.ubuntu.com/manpages/bionic/zh_CN/man1/systemctl.1.html","rel":"external nofollow noreferrer"},"content":["Systemd - Ubuntu Manpages"]}," ",{"tag":"sup","content":["（",{"tag":"a","attrs":{"href":"https://web.archive.org/web/20210210150518/https://manpages.ubuntu.com/manpages/bionic/zh_CN/man1/systemctl.1.html","rel":"external nofollow noreferrer"},"content":["存档"]}," 于 ",{"tag":"a","attrs":{"href":"https://archive.org","rel":"external nofollow noreferrer"},"content":["互联网档案馆"]},"）"]}]},"\n",{"tag":"li","content":[{"tag":"a","attrs":{"href":"http://linux.vbird.org/linux_basic/0560daemons.php","rel":"external nofollow noreferrer"},"content":["第十七章 认识系统服务(daemons) - 鸟哥的 Linux 私房菜"]}," ",{"tag":"sup","content":["（",{"tag":"a","attrs":{"href":"https://web.archive.org/web/20200810204650/http://linux.vbird.org/linux_basic/0560daemons.php","rel":"external nofollow noreferrer"},"content":["存档"]}," 于 ",{"tag":"a","attrs":{"href":"https://archive.org","rel":"external nofollow noreferrer"},"content":["互联网档案馆"]},"）"]}]},"\n"]},"\n"],"thumb":"https://s1.baoshuo.ren/2021/08/17/bnP7pH3XR6IAx1U.png","date":"2021-02-11","updated":"2021-02-11","isoDate":"2021-02-11T16:06:31.000Z","isoUpdate":"2021-02-11T16:06:31.000Z","categories":[{"name":"技术向","url":"/categories/%E6%8A%80%E6%9C%AF%E5%90%91/"}],"tags":[{"name":"Linux","url":"/tags/Linux/"}],"license":null,"permalink":"https://blog.baoshuo.ren/post/linux-systemd/","url":"/post/linux-systemd/","prev":{"title":"浅谈网页「深色模式」的实现","url":"/post/darkmode/"},"next":{"title":"你好，2021 —— 博客迁移记录","url":"/post/hello-2021/"},"toc":{"1":{"text":"常用命令列表","id":"常用命令列表"},"2":{"text":"开机启动","id":"开机启动"},"3":{"1":{"1":{"text":"[Unit]: 启动顺序与依赖关系","id":"unit-启动顺序与依赖关系"},"2":{"text":"[Service]: 启动行为","id":"service-启动行为"},"3":{"text":"[Install]: 安装行为","id":"install-安装行为"},"text":"配置文件","id":"配置文件"},"2":{"text":"模板实例","id":"模板实例"},"text":"Unit","id":"unit"},"4":{"1":{"text":"配置文件","id":"配置文件-2"},"text":"Target","id":"target"},"5":{"text":"参考资料","id":"参考资料-6"}},"hasToc":true,"comments":true,"wordCount":"约 2.8 千字"},"__post":true},"__N_SSG":true}